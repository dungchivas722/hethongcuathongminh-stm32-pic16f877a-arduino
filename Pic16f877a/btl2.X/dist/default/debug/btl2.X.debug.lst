

Microchip MPLAB XC8 Assembler V2.30 build 20200825195618 
                                                                                               Mon Jun 20 19:49:11 2022

Microchip MPLAB XC8 C Compiler v2.30 (Free license) build 20200825195618 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    28                           	dabs	1,0x7E,2
    29  0000                     
    30                           ; Version 2.20
    31                           ; Generated 12/02/2020 GMT
    32                           ; 
    33                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    34                           ; All rights reserved.
    35                           ; 
    36                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    37                           ; 
    38                           ; Redistribution and use in source and binary forms, with or without modification, are
    39                           ; permitted provided that the following conditions are met:
    40                           ; 
    41                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    42                           ;        conditions and the following disclaimer.
    43                           ; 
    44                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    45                           ;        of conditions and the following disclaimer in the documentation and/or other
    46                           ;        materials provided with the distribution.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F877A Definitions
    62                           ; 
    63                           ; SFR Addresses
    64  0000                     	;# 
    65  0001                     	;# 
    66  0002                     	;# 
    67  0003                     	;# 
    68  0004                     	;# 
    69  0005                     	;# 
    70  0006                     	;# 
    71  0007                     	;# 
    72  0008                     	;# 
    73  0009                     	;# 
    74  000A                     	;# 
    75  000B                     	;# 
    76  000C                     	;# 
    77  000D                     	;# 
    78  000E                     	;# 
    79  000E                     	;# 
    80  000F                     	;# 
    81  0010                     	;# 
    82  0011                     	;# 
    83  0012                     	;# 
    84  0013                     	;# 
    85  0014                     	;# 
    86  0015                     	;# 
    87  0015                     	;# 
    88  0016                     	;# 
    89  0017                     	;# 
    90  0018                     	;# 
    91  0019                     	;# 
    92  001A                     	;# 
    93  001B                     	;# 
    94  001B                     	;# 
    95  001C                     	;# 
    96  001D                     	;# 
    97  001E                     	;# 
    98  001F                     	;# 
    99  0081                     	;# 
   100  0085                     	;# 
   101  0086                     	;# 
   102  0087                     	;# 
   103  0088                     	;# 
   104  0089                     	;# 
   105  008C                     	;# 
   106  008D                     	;# 
   107  008E                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  018C                     	;# 
   123  018D                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  0008                     	;# 
   133  0009                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000D                     	;# 
   138  000E                     	;# 
   139  000E                     	;# 
   140  000F                     	;# 
   141  0010                     	;# 
   142  0011                     	;# 
   143  0012                     	;# 
   144  0013                     	;# 
   145  0014                     	;# 
   146  0015                     	;# 
   147  0015                     	;# 
   148  0016                     	;# 
   149  0017                     	;# 
   150  0018                     	;# 
   151  0019                     	;# 
   152  001A                     	;# 
   153  001B                     	;# 
   154  001B                     	;# 
   155  001C                     	;# 
   156  001D                     	;# 
   157  001E                     	;# 
   158  001F                     	;# 
   159  0081                     	;# 
   160  0085                     	;# 
   161  0086                     	;# 
   162  0087                     	;# 
   163  0088                     	;# 
   164  0089                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0098                     	;# 
   173  0099                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  009F                     	;# 
   178  010C                     	;# 
   179  010D                     	;# 
   180  010E                     	;# 
   181  010F                     	;# 
   182  018C                     	;# 
   183  018D                     	;# 
   184  0000                     	;# 
   185  0001                     	;# 
   186  0002                     	;# 
   187  0003                     	;# 
   188  0004                     	;# 
   189  0005                     	;# 
   190  0006                     	;# 
   191  0007                     	;# 
   192  0008                     	;# 
   193  0009                     	;# 
   194  000A                     	;# 
   195  000B                     	;# 
   196  000C                     	;# 
   197  000D                     	;# 
   198  000E                     	;# 
   199  000E                     	;# 
   200  000F                     	;# 
   201  0010                     	;# 
   202  0011                     	;# 
   203  0012                     	;# 
   204  0013                     	;# 
   205  0014                     	;# 
   206  0015                     	;# 
   207  0015                     	;# 
   208  0016                     	;# 
   209  0017                     	;# 
   210  0018                     	;# 
   211  0019                     	;# 
   212  001A                     	;# 
   213  001B                     	;# 
   214  001B                     	;# 
   215  001C                     	;# 
   216  001D                     	;# 
   217  001E                     	;# 
   218  001F                     	;# 
   219  0081                     	;# 
   220  0085                     	;# 
   221  0086                     	;# 
   222  0087                     	;# 
   223  0088                     	;# 
   224  0089                     	;# 
   225  008C                     	;# 
   226  008D                     	;# 
   227  008E                     	;# 
   228  0091                     	;# 
   229  0092                     	;# 
   230  0093                     	;# 
   231  0094                     	;# 
   232  0098                     	;# 
   233  0099                     	;# 
   234  009C                     	;# 
   235  009D                     	;# 
   236  009E                     	;# 
   237  009F                     	;# 
   238  010C                     	;# 
   239  010D                     	;# 
   240  010E                     	;# 
   241  010F                     	;# 
   242  018C                     	;# 
   243  018D                     	;# 
   244  0000                     	;# 
   245  0001                     	;# 
   246  0002                     	;# 
   247  0003                     	;# 
   248  0004                     	;# 
   249  0005                     	;# 
   250  0006                     	;# 
   251  0007                     	;# 
   252  0008                     	;# 
   253  0009                     	;# 
   254  000A                     	;# 
   255  000B                     	;# 
   256  000C                     	;# 
   257  000D                     	;# 
   258  000E                     	;# 
   259  000E                     	;# 
   260  000F                     	;# 
   261  0010                     	;# 
   262  0011                     	;# 
   263  0012                     	;# 
   264  0013                     	;# 
   265  0014                     	;# 
   266  0015                     	;# 
   267  0015                     	;# 
   268  0016                     	;# 
   269  0017                     	;# 
   270  0018                     	;# 
   271  0019                     	;# 
   272  001A                     	;# 
   273  001B                     	;# 
   274  001B                     	;# 
   275  001C                     	;# 
   276  001D                     	;# 
   277  001E                     	;# 
   278  001F                     	;# 
   279  0081                     	;# 
   280  0085                     	;# 
   281  0086                     	;# 
   282  0087                     	;# 
   283  0088                     	;# 
   284  0089                     	;# 
   285  008C                     	;# 
   286  008D                     	;# 
   287  008E                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0094                     	;# 
   292  0098                     	;# 
   293  0099                     	;# 
   294  009C                     	;# 
   295  009D                     	;# 
   296  009E                     	;# 
   297  009F                     	;# 
   298  010C                     	;# 
   299  010D                     	;# 
   300  010E                     	;# 
   301  010F                     	;# 
   302  018C                     	;# 
   303  018D                     	;# 
   304  0000                     	;# 
   305  0001                     	;# 
   306  0002                     	;# 
   307  0003                     	;# 
   308  0004                     	;# 
   309  0005                     	;# 
   310  0006                     	;# 
   311  0007                     	;# 
   312  0008                     	;# 
   313  0009                     	;# 
   314  000A                     	;# 
   315  000B                     	;# 
   316  000C                     	;# 
   317  000D                     	;# 
   318  000E                     	;# 
   319  000E                     	;# 
   320  000F                     	;# 
   321  0010                     	;# 
   322  0011                     	;# 
   323  0012                     	;# 
   324  0013                     	;# 
   325  0014                     	;# 
   326  0015                     	;# 
   327  0015                     	;# 
   328  0016                     	;# 
   329  0017                     	;# 
   330  0018                     	;# 
   331  0019                     	;# 
   332  001A                     	;# 
   333  001B                     	;# 
   334  001B                     	;# 
   335  001C                     	;# 
   336  001D                     	;# 
   337  001E                     	;# 
   338  001F                     	;# 
   339  0081                     	;# 
   340  0085                     	;# 
   341  0086                     	;# 
   342  0087                     	;# 
   343  0088                     	;# 
   344  0089                     	;# 
   345  008C                     	;# 
   346  008D                     	;# 
   347  008E                     	;# 
   348  0091                     	;# 
   349  0092                     	;# 
   350  0093                     	;# 
   351  0094                     	;# 
   352  0098                     	;# 
   353  0099                     	;# 
   354  009C                     	;# 
   355  009D                     	;# 
   356  009E                     	;# 
   357  009F                     	;# 
   358  010C                     	;# 
   359  010D                     	;# 
   360  010E                     	;# 
   361  010F                     	;# 
   362  018C                     	;# 
   363  018D                     	;# 
   364  0000                     	;# 
   365  0001                     	;# 
   366  0002                     	;# 
   367  0003                     	;# 
   368  0004                     	;# 
   369  0005                     	;# 
   370  0006                     	;# 
   371  0007                     	;# 
   372  0008                     	;# 
   373  0009                     	;# 
   374  000A                     	;# 
   375  000B                     	;# 
   376  000C                     	;# 
   377  000D                     	;# 
   378  000E                     	;# 
   379  000E                     	;# 
   380  000F                     	;# 
   381  0010                     	;# 
   382  0011                     	;# 
   383  0012                     	;# 
   384  0013                     	;# 
   385  0014                     	;# 
   386  0015                     	;# 
   387  0015                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001B                     	;# 
   395  001C                     	;# 
   396  001D                     	;# 
   397  001E                     	;# 
   398  001F                     	;# 
   399  0081                     	;# 
   400  0085                     	;# 
   401  0086                     	;# 
   402  0087                     	;# 
   403  0088                     	;# 
   404  0089                     	;# 
   405  008C                     	;# 
   406  008D                     	;# 
   407  008E                     	;# 
   408  0091                     	;# 
   409  0092                     	;# 
   410  0093                     	;# 
   411  0094                     	;# 
   412  0098                     	;# 
   413  0099                     	;# 
   414  009C                     	;# 
   415  009D                     	;# 
   416  009E                     	;# 
   417  009F                     	;# 
   418  010C                     	;# 
   419  010D                     	;# 
   420  010E                     	;# 
   421  010F                     	;# 
   422  018C                     	;# 
   423  018D                     	;# 
   424  001E                     _ADRESH	set	30
   425  001F                     _ADCON0	set	31
   426  001D                     _CCP2CONbits	set	29
   427  0012                     _T2CONbits	set	18
   428  0017                     _CCP1CONbits	set	23
   429  001B                     _CCPR2L	set	27
   430  0015                     _CCPR1L	set	21
   431  0001                     _TMR0	set	1
   432  000B                     _INTCONbits	set	11
   433  0007                     _PORTC	set	7
   434  001A                     _RCREG	set	26
   435  0019                     _TXREG	set	25
   436  00FA                     _GO_nDONE	set	250
   437  00EC                     _CCP2Y	set	236
   438  00ED                     _CCP2X	set	237
   439  00BC                     _CCP1Y	set	188
   440  00BD                     _CCP1X	set	189
   441  0042                     _RD2	set	66
   442  0040                     _RD0	set	64
   443  0047                     _RD7	set	71
   444  0046                     _RD6	set	70
   445  0045                     _RD5	set	69
   446  0044                     _RD4	set	68
   447  0041                     _RD1	set	65
   448  0065                     _RCIF	set	101
   449  00C4                     _CREN	set	196
   450  00C7                     _SPEN	set	199
   451  009E                     _ADRESL	set	158
   452  009F                     _ADCON1	set	159
   453  0087                     _TRISCbits	set	135
   454  0092                     _PR2	set	146
   455  0081                     _OPTION_REGbits	set	129
   456  0087                     _TRISC	set	135
   457  0088                     _TRISD	set	136
   458  0099                     _SPBRG	set	153
   459  0431                     _TRISB1	set	1073
   460  04C1                     _TRMT	set	1217
   461  04C5                     _TXEN	set	1221
   462  043E                     _TRISC6	set	1086
   463  043F                     _TRISC7	set	1087
   464  04C4                     _SYNC	set	1220
   465  04C2                     _BRGH	set	1218
   466                           
   467                           	psect	strings
   468  0015                     __pstrings:
   469  0015                     stringtab:
   470  0015                     __stringtab:
   471                           
   472                           ;	String table - string pointers are 1 byte each
   473  0015  1BFF               	btfsc	btemp+1,7
   474  0016  281F               	ljmp	stringcode
   475  0017  1383               	bcf	3,7
   476  0018  187F               	btfsc	btemp+1,0
   477  0019  1783               	bsf	3,7
   478  001A  0800               	movf	0,w
   479  001B  0A84               	incf	4,f
   480  001C  1903               	skipnz
   481  001D  0AFF               	incf	btemp+1,f
   482  001E  0008               	return
   483  001F                     stringcode:
   484  001F                     stringdir:
   485  001F  3000               	movlw	high stringdir
   486  0020  008A               	movwf	10
   487  0021  0804               	movf	4,w
   488  0022  0A84               	incf	4,f
   489  0023  0782               	addwf	2,f
   490  0024                     __stringbase:
   491  0024  3400               	retlw	0
   492  0025                     __end_of__stringtab:
   493  0025                     STR_1:
   494  0025  3456               	retlw	86	;'V'
   495  0026  346F               	retlw	111	;'o'
   496  0027  346E               	retlw	110	;'n'
   497  0028  3400               	retlw	0
   498  0029                     STR_2:
   499  0029  3425               	retlw	37	;'%'
   500  002A  3475               	retlw	117	;'u'
   501  002B  3400               	retlw	0
   502  002C                     STR_4:
   503  002C  343A               	retlw	58	;':'
   504  002D  3400               	retlw	0
   505  002C                     
   506                           	psect	cinit
   507  07EF                     start_initialization:	
   508                           ; #config settings
   509                           
   510  07EF                     __initialization:
   511                           
   512                           ; Clear objects allocated to COMMON
   513  07EF  01F9               	clrf	__pbssCOMMON& (0+127)
   514  07F0  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   515  07F1  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   516  07F2  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   517                           
   518                           ; Clear objects allocated to BANK0
   519  07F3  1383               	bcf	3,7	;select IRP bank0
   520  07F4  304F               	movlw	low __pbssBANK0
   521  07F5  0084               	movwf	4
   522  07F6  3065               	movlw	low (__pbssBANK0+22)
   523  07F7  120A  118A  2385  120A  118A  	fcall	clear_ram0
   524  07FC                     end_of_initialization:	
   525                           ;End of C runtime variable initialization code
   526                           
   527  07FC                     __end_of__initialization:
   528  07FC  0183               	clrf	3
   529  07FD  120A  118A  2EDE   	ljmp	_main	;jump to C main() function
   530                           
   531                           	psect	bssCOMMON
   532  0079                     __pbssCOMMON:
   533  0079                     _count:
   534  0079                     	ds	2
   535  007B                     _x:
   536  007B                     	ds	2
   537                           
   538                           	psect	bssBANK0
   539  004F                     __pbssBANK0:
   540  004F                     _s:
   541  004F                     	ds	10
   542  0059                     _duty:
   543  0059                     	ds	2
   544  005B                     _hour:
   545  005B                     	ds	2
   546  005D                     _second:
   547  005D                     	ds	2
   548  005F                     _minute:
   549  005F                     	ds	2
   550  0061                     _freq:
   551  0061                     	ds	4
   552                           
   553                           	psect	clrtext
   554  0385                     clear_ram0:	
   555                           ;	Called with FSR containing the base address, and
   556                           ;	W with the last address+1
   557                           
   558  0385  0064               	clrwdt	;clear the watchdog before getting into this loop
   559  0386                     clrloop0:
   560  0386  0180               	clrf	0	;clear RAM location pointed to by FSR
   561  0387  0A84               	incf	4,f	;increment pointer
   562  0388  0604               	xorwf	4,w	;XOR with final address
   563  0389  1903               	btfsc	3,2	;have we reached the end yet?
   564  038A  3400               	retlw	0	;all done for this memory range, return
   565  038B  0604               	xorwf	4,w	;XOR again to restore value
   566  038C  2B86               	goto	clrloop0	;do the next byte
   567                           
   568                           	psect	cstackCOMMON
   569  0071                     __pcstackCOMMON:
   570  0071                     ?_TMR0_Unit:
   571  0071                     ?_ADC_Initialize:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0071                     ?_Lcd_Init:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0071                     ?_UART_Write:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0071                     ??_UART_Write:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0071                     ?_UART_Write_Text:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0071                     ?_main:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0071                     ?_ISR:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0071                     ?_Lcd_Port:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0071                     ?_Lcd_Cmd:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0071                     ?_Lcd_Write_Char:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0071                     UART_Write@data:	
   602                           ; 1 bytes @ 0x0
   603                           
   604                           
   605                           ; 1 bytes @ 0x0
   606  0071                     	ds	1
   607  0072                     ??_UART_Write_Text:
   608  0072                     UART_Write_Text@i:	
   609                           ; 1 bytes @ 0x1
   610                           
   611                           
   612                           ; 2 bytes @ 0x1
   613  0072                     	ds	2
   614  0074                     UART_Write_Text@text:
   615                           
   616                           ; 1 bytes @ 0x3
   617  0074                     	ds	1
   618  0075                     ??_ISR:
   619                           
   620                           ; 1 bytes @ 0x4
   621  0075                     	ds	4
   622                           
   623                           	psect	cstackBANK0
   624  0020                     __pcstackBANK0:
   625  0020                     ??_TMR0_Unit:
   626  0020                     ??_ADC_Initialize:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0020                     ??_Lcd_Port:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0020                     ?_ADC_Read:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0020                     ?___wmul:	
   636                           ; 2 bytes @ 0x0
   637                           
   638  0020                     ?___aldiv:	
   639                           ; 2 bytes @ 0x0
   640                           
   641  0020                     Lcd_Port@a:	
   642                           ; 4 bytes @ 0x0
   643                           
   644  0020                     ___wmul@multiplier:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0020                     ___aldiv@divisor:	
   648                           ; 2 bytes @ 0x0
   649                           
   650                           
   651                           ; 4 bytes @ 0x0
   652  0020                     	ds	1
   653  0021                     ??_Lcd_Cmd:
   654  0021                     ??_Lcd_Write_Char:	
   655                           ; 1 bytes @ 0x1
   656                           
   657                           
   658                           ; 1 bytes @ 0x1
   659  0021                     	ds	1
   660  0022                     ??_ADC_Read:
   661  0022                     Lcd_Write_Char@temp:	
   662                           ; 1 bytes @ 0x2
   663                           
   664  0022                     ___wmul@multiplicand:	
   665                           ; 1 bytes @ 0x2
   666                           
   667                           
   668                           ; 2 bytes @ 0x2
   669  0022                     	ds	1
   670  0023                     Lcd_Cmd@a:
   671  0023                     Lcd_Write_Char@y:	
   672                           ; 1 bytes @ 0x3
   673                           
   674                           
   675                           ; 1 bytes @ 0x3
   676  0023                     	ds	1
   677  0024                     ??_Lcd_Init:
   678  0024                     ??___wmul:	
   679                           ; 1 bytes @ 0x4
   680                           
   681  0024                     Lcd_Write_Char@a:	
   682                           ; 1 bytes @ 0x4
   683                           
   684  0024                     ADC_Read@channel:	
   685                           ; 1 bytes @ 0x4
   686                           
   687  0024                     ___wmul@product:	
   688                           ; 1 bytes @ 0x4
   689                           
   690  0024                     ___aldiv@dividend:	
   691                           ; 2 bytes @ 0x4
   692                           
   693                           
   694                           ; 4 bytes @ 0x4
   695  0024                     	ds	1
   696  0025                     ?_Lcd_Write_String:
   697  0025                     Lcd_Write_String@a:	
   698                           ; 1 bytes @ 0x5
   699                           
   700                           
   701                           ; 2 bytes @ 0x5
   702  0025                     	ds	2
   703  0027                     ??_Lcd_Write_String:
   704  0027                     Lcd_Write_String@i:	
   705                           ; 1 bytes @ 0x7
   706                           
   707                           
   708                           ; 2 bytes @ 0x7
   709  0027                     	ds	1
   710  0028                     ??___aldiv:
   711                           
   712                           ; 1 bytes @ 0x8
   713  0028                     	ds	1
   714  0029                     ___aldiv@counter:
   715                           
   716                           ; 1 bytes @ 0x9
   717  0029                     	ds	1
   718  002A                     ___aldiv@sign:
   719                           
   720                           ; 1 bytes @ 0xA
   721  002A                     	ds	1
   722  002B                     ___aldiv@quotient:
   723                           
   724                           ; 4 bytes @ 0xB
   725  002B                     	ds	4
   726  002F                     ?_UART_Init:
   727  002F                     UART_Init@baudrate:	
   728                           ; 1 bytes @ 0xF
   729                           
   730                           
   731                           ; 4 bytes @ 0xF
   732  002F                     	ds	4
   733  0033                     ??_UART_Init:
   734                           
   735                           ; 1 bytes @ 0x13
   736  0033                     	ds	12
   737  003F                     UART_Init@x:
   738                           
   739                           ; 2 bytes @ 0x1F
   740  003F                     	ds	2
   741  0041                     ??_main:
   742                           
   743                           ; 1 bytes @ 0x21
   744  0041                     	ds	3
   745  0044                     main@x:
   746                           
   747                           ; 2 bytes @ 0x24
   748  0044                     	ds	2
   749  0046                     main@y:
   750                           
   751                           ; 2 bytes @ 0x26
   752  0046                     	ds	2
   753  0048                     main@joy_X:
   754                           
   755                           ; 2 bytes @ 0x28
   756  0048                     	ds	2
   757  004A                     main@joy_Y:
   758                           
   759                           ; 2 bytes @ 0x2A
   760  004A                     	ds	2
   761  004C                     main@vitri:
   762                           
   763                           ; 1 bytes @ 0x2C
   764  004C                     	ds	1
   765  004D                     main@dem:
   766                           
   767                           ; 2 bytes @ 0x2D
   768  004D                     	ds	2
   769                           
   770                           	psect	maintext
   771  06DE                     __pmaintext:	
   772 ;;
   773 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   774 ;;
   775 ;; *************** function _main *****************
   776 ;; Defined at:
   777 ;;		line 14 in file "Mainprj2.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;		None
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  dem             2   45[BANK0 ] int 
   782 ;;  joy_Y           2   42[BANK0 ] int 
   783 ;;  joy_X           2   40[BANK0 ] int 
   784 ;;  y               2   38[BANK0 ] int 
   785 ;;  x               2   36[BANK0 ] int 
   786 ;;  vitri           1   44[BANK0 ] unsigned char 
   787 ;; Return value:  Size  Location     Type
   788 ;;                  1    wreg      void 
   789 ;; Registers used:
   790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   791 ;; Tracked objects:
   792 ;;		On entry : B00/0
   793 ;;		On exit  : 0/0
   794 ;;		Unchanged: 0/0
   795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   796 ;;      Params:         0       0       0       0       0
   797 ;;      Locals:         0      11       0       0       0
   798 ;;      Temps:          0       3       0       0       0
   799 ;;      Totals:         0      14       0       0       0
   800 ;;Total ram usage:       14 bytes
   801 ;; Hardware stack levels required when called:    6
   802 ;; This function calls:
   803 ;;		_ADC_Initialize
   804 ;;		_ADC_Read
   805 ;;		_Lcd_Init
   806 ;;		_Lcd_Write_String
   807 ;;		_TMR0_Unit
   808 ;;		_UART_Init
   809 ;;		___wmul
   810 ;; This function is called by:
   811 ;;		Startup code after reset
   812 ;; This function uses a non-reentrant model
   813 ;;
   814                           
   815                           
   816                           ;psect for function _main
   817  06DE                     _main:
   818  06DE                     l1519:	
   819                           ;incstack = 0
   820                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   821                           
   822                           
   823                           ;Mainprj2.c: 16:     TRISD = 0x00;
   824  06DE  1683               	bsf	3,5	;RP0=1, select bank1
   825  06DF  1303               	bcf	3,6	;RP1=0, select bank1
   826  06E0  0188               	clrf	8	;volatile
   827  06E1                     l1521:
   828                           
   829                           ;Mainprj2.c: 17:     UART_Init(9600);
   830  06E1  3000               	movlw	0
   831  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   832  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   833  06E4  00B2               	movwf	UART_Init@baudrate+3
   834  06E5  3000               	movlw	0
   835  06E6  00B1               	movwf	UART_Init@baudrate+2
   836  06E7  3025               	movlw	37
   837  06E8  00B0               	movwf	UART_Init@baudrate+1
   838  06E9  3080               	movlw	128
   839  06EA  00AF               	movwf	UART_Init@baudrate
   840  06EB  120A  118A  2601  120A  118A  	fcall	_UART_Init
   841  06F0                     l1523:
   842                           
   843                           ;Mainprj2.c: 18:     TMR0_Unit();
   844  06F0  120A  118A  23A2  120A  118A  	fcall	_TMR0_Unit
   845                           
   846                           ;Mainprj2.c: 19:     TRISC=0X00;
   847  06F5  1683               	bsf	3,5	;RP0=1, select bank1
   848  06F6  1303               	bcf	3,6	;RP1=0, select bank1
   849  06F7  0187               	clrf	7	;volatile
   850                           
   851                           ;Mainprj2.c: 20:     PORTC=0X00;
   852  06F8  1283               	bcf	3,5	;RP0=0, select bank0
   853  06F9  1303               	bcf	3,6	;RP1=0, select bank0
   854  06FA  0187               	clrf	7	;volatile
   855  06FB                     l1525:
   856                           
   857                           ;Mainprj2.c: 21:     TRISB1=1;
   858  06FB  1683               	bsf	3,5	;RP0=1, select bank1
   859  06FC  1303               	bcf	3,6	;RP1=0, select bank1
   860  06FD  1486               	bsf	6,1	;volatile
   861  06FE                     l1527:
   862                           
   863                           ;Mainprj2.c: 22:     ADC_Initialize();
   864  06FE  120A  118A  238D  120A  118A  	fcall	_ADC_Initialize
   865  0703                     l1529:
   866                           
   867                           ;Mainprj2.c: 23:     Lcd_Init();
   868  0703  120A  118A  2501  120A  118A  	fcall	_Lcd_Init
   869  0708  1283               	bcf	3,5	;RP0=0, select bank0
   870  0709  1303               	bcf	3,6	;RP1=0, select bank0
   871  070A  01C6               	clrf	main@y
   872  070B  01C7               	clrf	main@y+1
   873  070C                     l1531:
   874                           
   875                           ;Mainprj2.c: 28:     int joy_X = (ADC_Read(0));
   876  070C  3000               	movlw	0
   877  070D  120A  118A  2464  120A  118A  	fcall	_ADC_Read
   878  0712  1283               	bcf	3,5	;RP0=0, select bank0
   879  0713  1303               	bcf	3,6	;RP1=0, select bank0
   880  0714  0821               	movf	?_ADC_Read+1,w
   881  0715  00C9               	movwf	main@joy_X+1
   882  0716  0820               	movf	?_ADC_Read,w
   883  0717  00C8               	movwf	main@joy_X
   884  0718                     l1533:
   885                           
   886                           ;Mainprj2.c: 30:     int joy_Y = (ADC_Read(1));
   887  0718  3001               	movlw	1
   888  0719  120A  118A  2464  120A  118A  	fcall	_ADC_Read
   889  071E  1283               	bcf	3,5	;RP0=0, select bank0
   890  071F  1303               	bcf	3,6	;RP1=0, select bank0
   891  0720  0821               	movf	?_ADC_Read+1,w
   892  0721  00CB               	movwf	main@joy_Y+1
   893  0722  0820               	movf	?_ADC_Read,w
   894  0723  00CA               	movwf	main@joy_Y
   895  0724                     l1535:
   896                           
   897                           ;Mainprj2.c: 34:     if (joy_X < 200)
   898  0724  0849               	movf	main@joy_X+1,w
   899  0725  3A80               	xorlw	128
   900  0726  00FF               	movwf	btemp+1
   901  0727  3080               	movlw	128
   902  0728  027F               	subwf	btemp+1,w
   903  0729  1D03               	skipz
   904  072A  2F2D               	goto	u1075
   905  072B  30C8               	movlw	200
   906  072C  0248               	subwf	main@joy_X,w
   907  072D                     u1075:
   908  072D  1803               	skipnc
   909  072E  2F30               	goto	u1071
   910  072F  2F31               	goto	u1070
   911  0730                     u1071:
   912  0730  2F38               	goto	l1539
   913  0731                     u1070:
   914  0731                     l1537:
   915                           
   916                           ;Mainprj2.c: 36:     { x=1;}
   917  0731  3001               	movlw	1
   918  0732  1283               	bcf	3,5	;RP0=0, select bank0
   919  0733  1303               	bcf	3,6	;RP1=0, select bank0
   920  0734  00C4               	movwf	main@x
   921  0735  3000               	movlw	0
   922  0736  00C5               	movwf	main@x+1
   923  0737  2F54               	goto	l1545
   924  0738                     l1539:
   925  0738  1283               	bcf	3,5	;RP0=0, select bank0
   926  0739  1303               	bcf	3,6	;RP1=0, select bank0
   927  073A  0849               	movf	main@joy_X+1,w
   928  073B  3A80               	xorlw	128
   929  073C  00FF               	movwf	btemp+1
   930  073D  3083               	movlw	131
   931  073E  027F               	subwf	btemp+1,w
   932  073F  1D03               	skipz
   933  0740  2F43               	goto	u1085
   934  0741  3021               	movlw	33
   935  0742  0248               	subwf	main@joy_X,w
   936  0743                     u1085:
   937  0743  1C03               	skipc
   938  0744  2F46               	goto	u1081
   939  0745  2F47               	goto	u1080
   940  0746                     u1081:
   941  0746  2F4E               	goto	l1543
   942  0747                     u1080:
   943  0747                     l1541:
   944                           
   945                           ;Mainprj2.c: 40:     { x=2;}
   946  0747  3002               	movlw	2
   947  0748  1283               	bcf	3,5	;RP0=0, select bank0
   948  0749  1303               	bcf	3,6	;RP1=0, select bank0
   949  074A  00C4               	movwf	main@x
   950  074B  3000               	movlw	0
   951  074C  00C5               	movwf	main@x+1
   952  074D  2F54               	goto	l1545
   953  074E                     l1543:
   954                           
   955                           ;Mainprj2.c: 44:     { x=3;}
   956  074E  3003               	movlw	3
   957  074F  1283               	bcf	3,5	;RP0=0, select bank0
   958  0750  1303               	bcf	3,6	;RP1=0, select bank0
   959  0751  00C4               	movwf	main@x
   960  0752  3000               	movlw	0
   961  0753  00C5               	movwf	main@x+1
   962  0754                     l1545:
   963                           
   964                           ;Mainprj2.c: 50:     if (joy_Y < 200)
   965  0754  084B               	movf	main@joy_Y+1,w
   966  0755  3A80               	xorlw	128
   967  0756  00FF               	movwf	btemp+1
   968  0757  3080               	movlw	128
   969  0758  027F               	subwf	btemp+1,w
   970  0759  1D03               	skipz
   971  075A  2F5D               	goto	u1095
   972  075B  30C8               	movlw	200
   973  075C  024A               	subwf	main@joy_Y,w
   974  075D                     u1095:
   975  075D  1803               	skipnc
   976  075E  2F60               	goto	u1091
   977  075F  2F61               	goto	u1090
   978  0760                     u1091:
   979  0760  2F68               	goto	l1549
   980  0761                     u1090:
   981  0761                     l1547:
   982                           
   983                           ;Mainprj2.c: 52:     { y=4;}
   984  0761  3004               	movlw	4
   985  0762  1283               	bcf	3,5	;RP0=0, select bank0
   986  0763  1303               	bcf	3,6	;RP1=0, select bank0
   987  0764  00C6               	movwf	main@y
   988  0765  3000               	movlw	0
   989  0766  00C7               	movwf	main@y+1
   990  0767  2F84               	goto	l1555
   991  0768                     l1549:
   992  0768  1283               	bcf	3,5	;RP0=0, select bank0
   993  0769  1303               	bcf	3,6	;RP1=0, select bank0
   994  076A  084B               	movf	main@joy_Y+1,w
   995  076B  3A80               	xorlw	128
   996  076C  00FF               	movwf	btemp+1
   997  076D  3083               	movlw	131
   998  076E  027F               	subwf	btemp+1,w
   999  076F  1D03               	skipz
  1000  0770  2F73               	goto	u1105
  1001  0771  3021               	movlw	33
  1002  0772  024A               	subwf	main@joy_Y,w
  1003  0773                     u1105:
  1004  0773  1C03               	skipc
  1005  0774  2F76               	goto	u1101
  1006  0775  2F77               	goto	u1100
  1007  0776                     u1101:
  1008  0776  2F7E               	goto	l1553
  1009  0777                     u1100:
  1010  0777                     l1551:
  1011                           
  1012                           ;Mainprj2.c: 56:     { y=5;}
  1013  0777  3005               	movlw	5
  1014  0778  1283               	bcf	3,5	;RP0=0, select bank0
  1015  0779  1303               	bcf	3,6	;RP1=0, select bank0
  1016  077A  00C6               	movwf	main@y
  1017  077B  3000               	movlw	0
  1018  077C  00C7               	movwf	main@y+1
  1019  077D  2F84               	goto	l1555
  1020  077E                     l1553:
  1021                           
  1022                           ;Mainprj2.c: 60:     { y=6;}
  1023  077E  3006               	movlw	6
  1024  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1025  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1026  0781  00C6               	movwf	main@y
  1027  0782  3000               	movlw	0
  1028  0783  00C7               	movwf	main@y+1
  1029  0784                     l1555:
  1030                           
  1031                           ;Mainprj2.c: 61:     int dem = x*10+y;
  1032  0784  0845               	movf	main@x+1,w
  1033  0785  00A1               	movwf	___wmul@multiplier+1
  1034  0786  0844               	movf	main@x,w
  1035  0787  00A0               	movwf	___wmul@multiplier
  1036  0788  300A               	movlw	10
  1037  0789  00A2               	movwf	___wmul@multiplicand
  1038  078A  3000               	movlw	0
  1039  078B  00A3               	movwf	___wmul@multiplicand+1
  1040  078C  120A  118A  243D  120A  118A  	fcall	___wmul
  1041  0791  1283               	bcf	3,5	;RP0=0, select bank0
  1042  0792  1303               	bcf	3,6	;RP1=0, select bank0
  1043  0793  0846               	movf	main@y,w
  1044  0794  0720               	addwf	?___wmul,w
  1045  0795  00CD               	movwf	main@dem
  1046  0796  0847               	movf	main@y+1,w
  1047  0797  1803               	skipnc
  1048  0798  0A47               	incf	main@y+1,w
  1049  0799  0721               	addwf	?___wmul+1,w
  1050  079A  00CE               	movwf	main@dem+1
  1051  079B                     l1557:
  1052                           
  1053                           ;Mainprj2.c: 62:     if ( dem == 35 && dem == 15 && dem == 25 ) vitri = 'l';
  1054  079B  3023               	movlw	35
  1055  079C  064D               	xorwf	main@dem,w
  1056  079D  044E               	iorwf	main@dem+1,w
  1057  079E  1D03               	btfss	3,2
  1058  079F  2FA1               	goto	u1111
  1059  07A0  2FA2               	goto	u1110
  1060  07A1                     u1111:
  1061  07A1  2FB5               	goto	l1565
  1062  07A2                     u1110:
  1063  07A2                     l1559:
  1064  07A2  300F               	movlw	15
  1065  07A3  064D               	xorwf	main@dem,w
  1066  07A4  044E               	iorwf	main@dem+1,w
  1067  07A5  1D03               	btfss	3,2
  1068  07A6  2FA8               	goto	u1121
  1069  07A7  2FA9               	goto	u1120
  1070  07A8                     u1121:
  1071  07A8  2FB5               	goto	l1565
  1072  07A9                     u1120:
  1073  07A9                     l1561:
  1074  07A9  3019               	movlw	25
  1075  07AA  064D               	xorwf	main@dem,w
  1076  07AB  044E               	iorwf	main@dem+1,w
  1077  07AC  1D03               	btfss	3,2
  1078  07AD  2FAF               	goto	u1131
  1079  07AE  2FB0               	goto	u1130
  1080  07AF                     u1131:
  1081  07AF  2FB5               	goto	l1565
  1082  07B0                     u1130:
  1083  07B0                     l1563:
  1084  07B0  306C               	movlw	108
  1085  07B1  00C1               	movwf	??_main
  1086  07B2  0841               	movf	??_main,w
  1087  07B3  00CC               	movwf	main@vitri
  1088  07B4  2FD1               	goto	l1575
  1089  07B5                     l1565:
  1090  07B5  3010               	movlw	16
  1091  07B6  064D               	xorwf	main@dem,w
  1092  07B7  044E               	iorwf	main@dem+1,w
  1093  07B8  1D03               	btfss	3,2
  1094  07B9  2FBB               	goto	u1141
  1095  07BA  2FBC               	goto	u1140
  1096  07BB                     u1141:
  1097  07BB  2FC1               	goto	l1569
  1098  07BC                     u1140:
  1099  07BC                     l1567:
  1100  07BC  3074               	movlw	116
  1101  07BD  00C1               	movwf	??_main
  1102  07BE  0841               	movf	??_main,w
  1103  07BF  00CC               	movwf	main@vitri
  1104  07C0  2FD1               	goto	l1575
  1105  07C1                     l1569:
  1106  07C1  303D               	movlw	61
  1107  07C2  064D               	xorwf	main@dem,w
  1108  07C3  044E               	iorwf	main@dem+1,w
  1109  07C4  1D03               	btfss	3,2
  1110  07C5  2FC7               	goto	u1151
  1111  07C6  2FC8               	goto	u1150
  1112  07C7                     u1151:
  1113  07C7  2FCD               	goto	l1573
  1114  07C8                     u1150:
  1115  07C8                     l1571:
  1116  07C8  3070               	movlw	112
  1117  07C9  00C1               	movwf	??_main
  1118  07CA  0841               	movf	??_main,w
  1119  07CB  00CC               	movwf	main@vitri
  1120  07CC  2FD1               	goto	l1575
  1121  07CD                     l1573:
  1122  07CD  3078               	movlw	120
  1123  07CE  00C1               	movwf	??_main
  1124  07CF  0841               	movf	??_main,w
  1125  07D0  00CC               	movwf	main@vitri
  1126  07D1                     l1575:
  1127                           
  1128                           ;Mainprj2.c: 67:  Lcd_Write_String(vitri);_delay((unsigned long)((100)*(20000000/4000.0)
      +                          ));
  1129  07D1  084C               	movf	main@vitri,w
  1130  07D2  00C1               	movwf	??_main
  1131  07D3  01C2               	clrf	??_main+1
  1132  07D4  0841               	movf	??_main,w
  1133  07D5  00A5               	movwf	Lcd_Write_String@a
  1134  07D6  0842               	movf	??_main+1,w
  1135  07D7  00A6               	movwf	Lcd_Write_String@a+1
  1136  07D8  120A  118A  2492  120A  118A  	fcall	_Lcd_Write_String
  1137  07DD                     l1577:
  1138  07DD  3003               	movlw	3
  1139  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1140  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1141  07E0  00C3               	movwf	??_main+2
  1142  07E1  308A               	movlw	138
  1143  07E2  00C2               	movwf	??_main+1
  1144  07E3  3055               	movlw	85
  1145  07E4  00C1               	movwf	??_main
  1146  07E5                     u1387:
  1147  07E5  0BC1               	decfsz	??_main,f
  1148  07E6  2FE5               	goto	u1387
  1149  07E7  0BC2               	decfsz	??_main+1,f
  1150  07E8  2FE5               	goto	u1387
  1151  07E9  0BC3               	decfsz	??_main+2,f
  1152  07EA  2FE5               	goto	u1387
  1153  07EB  2F0C               	goto	l1531
  1154  07EC  120A  118A  2812   	ljmp	start
  1155  07EF                     __end_of_main:
  1156                           
  1157                           	psect	text1
  1158  043D                     __ptext1:	
  1159 ;; *************** function ___wmul *****************
  1160 ;; Defined at:
  1161 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\Umul16.c"
  1162 ;; Parameters:    Size  Location     Type
  1163 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1164 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  product         2    4[BANK0 ] unsigned int 
  1167 ;; Return value:  Size  Location     Type
  1168 ;;                  2    0[BANK0 ] unsigned int 
  1169 ;; Registers used:
  1170 ;;		wreg, status,2, status,0
  1171 ;; Tracked objects:
  1172 ;;		On entry : 0/0
  1173 ;;		On exit  : 0/0
  1174 ;;		Unchanged: 0/0
  1175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1176 ;;      Params:         0       4       0       0       0
  1177 ;;      Locals:         0       2       0       0       0
  1178 ;;      Temps:          0       0       0       0       0
  1179 ;;      Totals:         0       6       0       0       0
  1180 ;;Total ram usage:        6 bytes
  1181 ;; Hardware stack levels used:    1
  1182 ;; Hardware stack levels required when called:    3
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;;		_Joystick
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function ___wmul
  1193  043D                     ___wmul:
  1194  043D                     l1505:	
  1195                           ;incstack = 0
  1196                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1197                           
  1198  043D  1283               	bcf	3,5	;RP0=0, select bank0
  1199  043E  1303               	bcf	3,6	;RP1=0, select bank0
  1200  043F  01A4               	clrf	___wmul@product
  1201  0440  01A5               	clrf	___wmul@product+1
  1202  0441                     l1507:
  1203  0441  1C20               	btfss	___wmul@multiplier,0
  1204  0442  2C44               	goto	u1031
  1205  0443  2C45               	goto	u1030
  1206  0444                     u1031:
  1207  0444  2C4B               	goto	l378
  1208  0445                     u1030:
  1209  0445                     l1509:
  1210  0445  0822               	movf	___wmul@multiplicand,w
  1211  0446  07A4               	addwf	___wmul@product,f
  1212  0447  1803               	skipnc
  1213  0448  0AA5               	incf	___wmul@product+1,f
  1214  0449  0823               	movf	___wmul@multiplicand+1,w
  1215  044A  07A5               	addwf	___wmul@product+1,f
  1216  044B                     l378:
  1217  044B  3001               	movlw	1
  1218  044C                     u1045:
  1219  044C  1003               	clrc
  1220  044D  0DA2               	rlf	___wmul@multiplicand,f
  1221  044E  0DA3               	rlf	___wmul@multiplicand+1,f
  1222  044F  3EFF               	addlw	-1
  1223  0450  1D03               	skipz
  1224  0451  2C4C               	goto	u1045
  1225  0452                     l1511:
  1226  0452  3001               	movlw	1
  1227  0453                     u1055:
  1228  0453  1003               	clrc
  1229  0454  0CA1               	rrf	___wmul@multiplier+1,f
  1230  0455  0CA0               	rrf	___wmul@multiplier,f
  1231  0456  3EFF               	addlw	-1
  1232  0457  1D03               	skipz
  1233  0458  2C53               	goto	u1055
  1234  0459                     l1513:
  1235  0459  0820               	movf	___wmul@multiplier,w
  1236  045A  0421               	iorwf	___wmul@multiplier+1,w
  1237  045B  1D03               	btfss	3,2
  1238  045C  2C5E               	goto	u1061
  1239  045D  2C5F               	goto	u1060
  1240  045E                     u1061:
  1241  045E  2C41               	goto	l1507
  1242  045F                     u1060:
  1243  045F                     l1515:
  1244  045F  0825               	movf	___wmul@product+1,w
  1245  0460  00A1               	movwf	?___wmul+1
  1246  0461  0824               	movf	___wmul@product,w
  1247  0462  00A0               	movwf	?___wmul
  1248  0463                     l380:
  1249  0463  0008               	return
  1250  0464                     __end_of___wmul:
  1251                           
  1252                           	psect	text2
  1253  0601                     __ptext2:	
  1254 ;; *************** function _UART_Init *****************
  1255 ;; Defined at:
  1256 ;;		line 1 in file "./Uart.h"
  1257 ;; Parameters:    Size  Location     Type
  1258 ;;  baudrate        4   15[BANK0 ] const long 
  1259 ;; Auto vars:     Size  Location     Type
  1260 ;;  x               2   31[BANK0 ] unsigned int 
  1261 ;; Return value:  Size  Location     Type
  1262 ;;                  1    wreg      unsigned char 
  1263 ;; Registers used:
  1264 ;;		wreg, status,2, status,0, pclath, cstack
  1265 ;; Tracked objects:
  1266 ;;		On entry : 0/0
  1267 ;;		On exit  : 0/0
  1268 ;;		Unchanged: 0/0
  1269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1270 ;;      Params:         0       4       0       0       0
  1271 ;;      Locals:         0       2       0       0       0
  1272 ;;      Temps:          0      12       0       0       0
  1273 ;;      Totals:         0      18       0       0       0
  1274 ;;Total ram usage:       18 bytes
  1275 ;; Hardware stack levels used:    1
  1276 ;; Hardware stack levels required when called:    4
  1277 ;; This function calls:
  1278 ;;		___aldiv
  1279 ;; This function is called by:
  1280 ;;		_main
  1281 ;; This function uses a non-reentrant model
  1282 ;;
  1283                           
  1284                           
  1285                           ;psect for function _UART_Init
  1286  0601                     _UART_Init:
  1287  0601                     l1401:	
  1288                           ;incstack = 0
  1289                           ; Regs used in _UART_Init: [wreg+status,2+status,0+pclath+cstack]
  1290                           
  1291                           
  1292                           ;./Uart.h: 1: char UART_Init(const long int baudrate);./Uart.h: 2: {;./Uart.h: 3:   unsi
      +                          gned int x;;./Uart.h: 4:   x = (20000000 - baudrate*64)/(baudrate*64);
  1293  0601  1283               	bcf	3,5	;RP0=0, select bank0
  1294  0602  1303               	bcf	3,6	;RP1=0, select bank0
  1295  0603  082F               	movf	UART_Init@baudrate,w
  1296  0604  00B3               	movwf	??_UART_Init
  1297  0605  0830               	movf	UART_Init@baudrate+1,w
  1298  0606  00B4               	movwf	??_UART_Init+1
  1299  0607  0831               	movf	UART_Init@baudrate+2,w
  1300  0608  00B5               	movwf	??_UART_Init+2
  1301  0609  0832               	movf	UART_Init@baudrate+3,w
  1302  060A  00B6               	movwf	??_UART_Init+3
  1303  060B  3006               	movlw	6
  1304  060C                     u865:
  1305  060C  1003               	clrc
  1306  060D  0DB3               	rlf	??_UART_Init,f
  1307  060E  0DB4               	rlf	??_UART_Init+1,f
  1308  060F  0DB5               	rlf	??_UART_Init+2,f
  1309  0610  0DB6               	rlf	??_UART_Init+3,f
  1310  0611                     u860:
  1311  0611  3EFF               	addlw	-1
  1312  0612  1D03               	skipz
  1313  0613  2E0C               	goto	u865
  1314  0614  0836               	movf	??_UART_Init+3,w
  1315  0615  00A3               	movwf	___aldiv@divisor+3
  1316  0616  0835               	movf	??_UART_Init+2,w
  1317  0617  00A2               	movwf	___aldiv@divisor+2
  1318  0618  0834               	movf	??_UART_Init+1,w
  1319  0619  00A1               	movwf	___aldiv@divisor+1
  1320  061A  0833               	movf	??_UART_Init,w
  1321  061B  00A0               	movwf	___aldiv@divisor
  1322  061C  082F               	movf	UART_Init@baudrate,w
  1323  061D  00B7               	movwf	??_UART_Init+4
  1324  061E  0830               	movf	UART_Init@baudrate+1,w
  1325  061F  00B8               	movwf	??_UART_Init+5
  1326  0620  0831               	movf	UART_Init@baudrate+2,w
  1327  0621  00B9               	movwf	??_UART_Init+6
  1328  0622  0832               	movf	UART_Init@baudrate+3,w
  1329  0623  00BA               	movwf	??_UART_Init+7
  1330  0624  3006               	movlw	6
  1331  0625                     u875:
  1332  0625  1003               	clrc
  1333  0626  0DB7               	rlf	??_UART_Init+4,f
  1334  0627  0DB8               	rlf	??_UART_Init+5,f
  1335  0628  0DB9               	rlf	??_UART_Init+6,f
  1336  0629  0DBA               	rlf	??_UART_Init+7,f
  1337  062A                     u870:
  1338  062A  3EFF               	addlw	-1
  1339  062B  1D03               	skipz
  1340  062C  2E25               	goto	u875
  1341  062D  3000               	movlw	0
  1342  062E  00BB               	movwf	??_UART_Init+8
  1343  062F  302D               	movlw	45
  1344  0630  00BC               	movwf	??_UART_Init+9
  1345  0631  3031               	movlw	49
  1346  0632  00BD               	movwf	??_UART_Init+10
  1347  0633  3001               	movlw	1
  1348  0634  00BE               	movwf	??_UART_Init+11
  1349  0635  0837               	movf	??_UART_Init+4,w
  1350  0636  02BB               	subwf	??_UART_Init+8,f
  1351  0637  0838               	movf	??_UART_Init+5,w
  1352  0638  1C03               	skipc
  1353  0639  0F38               	incfsz	??_UART_Init+5,w
  1354  063A  2E3C               	goto	u881
  1355  063B  2E3D               	goto	u882
  1356  063C                     u881:
  1357  063C  02BC               	subwf	??_UART_Init+9,f
  1358  063D                     u882:
  1359  063D  0839               	movf	??_UART_Init+6,w
  1360  063E  1C03               	skipc
  1361  063F  0F39               	incfsz	??_UART_Init+6,w
  1362  0640  2E42               	goto	u883
  1363  0641  2E43               	goto	u884
  1364  0642                     u883:
  1365  0642  02BD               	subwf	??_UART_Init+10,f
  1366  0643                     u884:
  1367  0643  083A               	movf	??_UART_Init+7,w
  1368  0644  1C03               	skipc
  1369  0645  0F3A               	incfsz	??_UART_Init+7,w
  1370  0646  2E48               	goto	u885
  1371  0647  2E49               	goto	u886
  1372  0648                     u885:
  1373  0648  02BE               	subwf	??_UART_Init+11,f
  1374  0649                     u886:
  1375  0649  083E               	movf	??_UART_Init+11,w
  1376  064A  00A7               	movwf	___aldiv@dividend+3
  1377  064B  083D               	movf	??_UART_Init+10,w
  1378  064C  00A6               	movwf	___aldiv@dividend+2
  1379  064D  083C               	movf	??_UART_Init+9,w
  1380  064E  00A5               	movwf	___aldiv@dividend+1
  1381  064F  083B               	movf	??_UART_Init+8,w
  1382  0650  00A4               	movwf	___aldiv@dividend
  1383  0651  120A  118A  2564  120A  118A  	fcall	___aldiv
  1384  0656  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0657  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0658  0821               	movf	?___aldiv+1,w
  1387  0659  00C0               	movwf	UART_Init@x+1
  1388  065A  0820               	movf	?___aldiv,w
  1389  065B  00BF               	movwf	UART_Init@x
  1390  065C                     l1403:
  1391                           
  1392                           ;./Uart.h: 5:   if(x>255)
  1393  065C  3001               	movlw	1
  1394  065D  0240               	subwf	UART_Init@x+1,w
  1395  065E  3000               	movlw	0
  1396  065F  1903               	skipnz
  1397  0660  023F               	subwf	UART_Init@x,w
  1398  0661  1C03               	skipc
  1399  0662  2E64               	goto	u891
  1400  0663  2E65               	goto	u890
  1401  0664                     u891:
  1402  0664  2EC1               	goto	l1409
  1403  0665                     u890:
  1404  0665                     l1405:
  1405                           
  1406                           ;./Uart.h: 6:   {;./Uart.h: 7:     x = (20000000 - baudrate*16)/(baudrate*16);
  1407  0665  082F               	movf	UART_Init@baudrate,w
  1408  0666  00B3               	movwf	??_UART_Init
  1409  0667  0830               	movf	UART_Init@baudrate+1,w
  1410  0668  00B4               	movwf	??_UART_Init+1
  1411  0669  0831               	movf	UART_Init@baudrate+2,w
  1412  066A  00B5               	movwf	??_UART_Init+2
  1413  066B  0832               	movf	UART_Init@baudrate+3,w
  1414  066C  00B6               	movwf	??_UART_Init+3
  1415  066D  3004               	movlw	4
  1416  066E                     u905:
  1417  066E  1003               	clrc
  1418  066F  0DB3               	rlf	??_UART_Init,f
  1419  0670  0DB4               	rlf	??_UART_Init+1,f
  1420  0671  0DB5               	rlf	??_UART_Init+2,f
  1421  0672  0DB6               	rlf	??_UART_Init+3,f
  1422  0673                     u900:
  1423  0673  3EFF               	addlw	-1
  1424  0674  1D03               	skipz
  1425  0675  2E6E               	goto	u905
  1426  0676  0836               	movf	??_UART_Init+3,w
  1427  0677  00A3               	movwf	___aldiv@divisor+3
  1428  0678  0835               	movf	??_UART_Init+2,w
  1429  0679  00A2               	movwf	___aldiv@divisor+2
  1430  067A  0834               	movf	??_UART_Init+1,w
  1431  067B  00A1               	movwf	___aldiv@divisor+1
  1432  067C  0833               	movf	??_UART_Init,w
  1433  067D  00A0               	movwf	___aldiv@divisor
  1434  067E  082F               	movf	UART_Init@baudrate,w
  1435  067F  00B7               	movwf	??_UART_Init+4
  1436  0680  0830               	movf	UART_Init@baudrate+1,w
  1437  0681  00B8               	movwf	??_UART_Init+5
  1438  0682  0831               	movf	UART_Init@baudrate+2,w
  1439  0683  00B9               	movwf	??_UART_Init+6
  1440  0684  0832               	movf	UART_Init@baudrate+3,w
  1441  0685  00BA               	movwf	??_UART_Init+7
  1442  0686  3004               	movlw	4
  1443  0687                     u915:
  1444  0687  1003               	clrc
  1445  0688  0DB7               	rlf	??_UART_Init+4,f
  1446  0689  0DB8               	rlf	??_UART_Init+5,f
  1447  068A  0DB9               	rlf	??_UART_Init+6,f
  1448  068B  0DBA               	rlf	??_UART_Init+7,f
  1449  068C                     u910:
  1450  068C  3EFF               	addlw	-1
  1451  068D  1D03               	skipz
  1452  068E  2E87               	goto	u915
  1453  068F  3000               	movlw	0
  1454  0690  00BB               	movwf	??_UART_Init+8
  1455  0691  302D               	movlw	45
  1456  0692  00BC               	movwf	??_UART_Init+9
  1457  0693  3031               	movlw	49
  1458  0694  00BD               	movwf	??_UART_Init+10
  1459  0695  3001               	movlw	1
  1460  0696  00BE               	movwf	??_UART_Init+11
  1461  0697  0837               	movf	??_UART_Init+4,w
  1462  0698  02BB               	subwf	??_UART_Init+8,f
  1463  0699  0838               	movf	??_UART_Init+5,w
  1464  069A  1C03               	skipc
  1465  069B  0F38               	incfsz	??_UART_Init+5,w
  1466  069C  2E9E               	goto	u921
  1467  069D  2E9F               	goto	u922
  1468  069E                     u921:
  1469  069E  02BC               	subwf	??_UART_Init+9,f
  1470  069F                     u922:
  1471  069F  0839               	movf	??_UART_Init+6,w
  1472  06A0  1C03               	skipc
  1473  06A1  0F39               	incfsz	??_UART_Init+6,w
  1474  06A2  2EA4               	goto	u923
  1475  06A3  2EA5               	goto	u924
  1476  06A4                     u923:
  1477  06A4  02BD               	subwf	??_UART_Init+10,f
  1478  06A5                     u924:
  1479  06A5  083A               	movf	??_UART_Init+7,w
  1480  06A6  1C03               	skipc
  1481  06A7  0F3A               	incfsz	??_UART_Init+7,w
  1482  06A8  2EAA               	goto	u925
  1483  06A9  2EAB               	goto	u926
  1484  06AA                     u925:
  1485  06AA  02BE               	subwf	??_UART_Init+11,f
  1486  06AB                     u926:
  1487  06AB  083E               	movf	??_UART_Init+11,w
  1488  06AC  00A7               	movwf	___aldiv@dividend+3
  1489  06AD  083D               	movf	??_UART_Init+10,w
  1490  06AE  00A6               	movwf	___aldiv@dividend+2
  1491  06AF  083C               	movf	??_UART_Init+9,w
  1492  06B0  00A5               	movwf	___aldiv@dividend+1
  1493  06B1  083B               	movf	??_UART_Init+8,w
  1494  06B2  00A4               	movwf	___aldiv@dividend
  1495  06B3  120A  118A  2564  120A  118A  	fcall	___aldiv
  1496  06B8  1283               	bcf	3,5	;RP0=0, select bank0
  1497  06B9  1303               	bcf	3,6	;RP1=0, select bank0
  1498  06BA  0821               	movf	?___aldiv+1,w
  1499  06BB  00C0               	movwf	UART_Init@x+1
  1500  06BC  0820               	movf	?___aldiv,w
  1501  06BD  00BF               	movwf	UART_Init@x
  1502  06BE                     l1407:
  1503                           
  1504                           ;./Uart.h: 8:     BRGH = 1;
  1505  06BE  1683               	bsf	3,5	;RP0=1, select bank1
  1506  06BF  1303               	bcf	3,6	;RP1=0, select bank1
  1507  06C0  1518               	bsf	24,2	;volatile
  1508  06C1                     l1409:
  1509                           
  1510                           ;./Uart.h: 10:   if(x<256)
  1511  06C1  3001               	movlw	1
  1512  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1513  06C3  0240               	subwf	UART_Init@x+1,w
  1514  06C4  3000               	movlw	0
  1515  06C5  1903               	skipnz
  1516  06C6  023F               	subwf	UART_Init@x,w
  1517  06C7  1803               	skipnc
  1518  06C8  2ECA               	goto	u931
  1519  06C9  2ECB               	goto	u930
  1520  06CA                     u931:
  1521  06CA  2EDD               	goto	l51
  1522  06CB                     u930:
  1523  06CB                     l1411:
  1524                           
  1525                           ;./Uart.h: 11:   {;./Uart.h: 12:     SPBRG = x;
  1526  06CB  083F               	movf	UART_Init@x,w
  1527  06CC  1683               	bsf	3,5	;RP0=1, select bank1
  1528  06CD  1303               	bcf	3,6	;RP1=0, select bank1
  1529  06CE  0099               	movwf	25	;volatile
  1530  06CF                     l1413:
  1531                           
  1532                           ;./Uart.h: 13:     SYNC = 0;
  1533  06CF  1218               	bcf	24,4	;volatile
  1534  06D0                     l1415:
  1535                           
  1536                           ;./Uart.h: 14:     SPEN = 1;
  1537  06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1538  06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1539  06D2  1798               	bsf	24,7	;volatile
  1540  06D3                     l1417:
  1541                           
  1542                           ;./Uart.h: 15:     TRISC7 = 1;
  1543  06D3  1683               	bsf	3,5	;RP0=1, select bank1
  1544  06D4  1303               	bcf	3,6	;RP1=0, select bank1
  1545  06D5  1787               	bsf	7,7	;volatile
  1546  06D6                     l1419:
  1547                           
  1548                           ;./Uart.h: 16:     TRISC6 = 1;
  1549  06D6  1707               	bsf	7,6	;volatile
  1550  06D7                     l1421:
  1551                           
  1552                           ;./Uart.h: 17:     CREN = 1;
  1553  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1554  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1555  06D9  1618               	bsf	24,4	;volatile
  1556  06DA                     l1423:
  1557                           
  1558                           ;./Uart.h: 18:     TXEN = 1;
  1559  06DA  1683               	bsf	3,5	;RP0=1, select bank1
  1560  06DB  1303               	bcf	3,6	;RP1=0, select bank1
  1561  06DC  1698               	bsf	24,5	;volatile
  1562  06DD                     l51:
  1563  06DD  0008               	return
  1564  06DE                     __end_of_UART_Init:
  1565                           
  1566                           	psect	text3
  1567  0564                     __ptext3:	
  1568 ;; *************** function ___aldiv *****************
  1569 ;; Defined at:
  1570 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.30\pic\sources\c90\common\aldiv.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;  divisor         4    0[BANK0 ] long 
  1573 ;;  dividend        4    4[BANK0 ] long 
  1574 ;; Auto vars:     Size  Location     Type
  1575 ;;  quotient        4   11[BANK0 ] long 
  1576 ;;  sign            1   10[BANK0 ] unsigned char 
  1577 ;;  counter         1    9[BANK0 ] unsigned char 
  1578 ;; Return value:  Size  Location     Type
  1579 ;;                  4    0[BANK0 ] long 
  1580 ;; Registers used:
  1581 ;;		wreg, status,2, status,0
  1582 ;; Tracked objects:
  1583 ;;		On entry : 0/0
  1584 ;;		On exit  : 0/0
  1585 ;;		Unchanged: 0/0
  1586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1587 ;;      Params:         0       8       0       0       0
  1588 ;;      Locals:         0       6       0       0       0
  1589 ;;      Temps:          0       1       0       0       0
  1590 ;;      Totals:         0      15       0       0       0
  1591 ;;Total ram usage:       15 bytes
  1592 ;; Hardware stack levels used:    1
  1593 ;; Hardware stack levels required when called:    3
  1594 ;; This function calls:
  1595 ;;		Nothing
  1596 ;; This function is called by:
  1597 ;;		_UART_Init
  1598 ;;		_PWM_Max_Duty
  1599 ;;		_PWM1_Init_Fre
  1600 ;;		_PWM2_Init_Fre
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function ___aldiv
  1606  0564                     ___aldiv:
  1607  0564                     l1361:	
  1608                           ;incstack = 0
  1609                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1610                           
  1611  0564  1283               	bcf	3,5	;RP0=0, select bank0
  1612  0565  1303               	bcf	3,6	;RP1=0, select bank0
  1613  0566  01AA               	clrf	___aldiv@sign
  1614  0567                     l1363:
  1615  0567  1FA3               	btfss	___aldiv@divisor+3,7
  1616  0568  2D6A               	goto	u761
  1617  0569  2D6B               	goto	u760
  1618  056A                     u761:
  1619  056A  2D78               	goto	l443
  1620  056B                     u760:
  1621  056B                     l1365:
  1622  056B  09A0               	comf	___aldiv@divisor,f
  1623  056C  09A1               	comf	___aldiv@divisor+1,f
  1624  056D  09A2               	comf	___aldiv@divisor+2,f
  1625  056E  09A3               	comf	___aldiv@divisor+3,f
  1626  056F  0AA0               	incf	___aldiv@divisor,f
  1627  0570  1903               	skipnz
  1628  0571  0AA1               	incf	___aldiv@divisor+1,f
  1629  0572  1903               	skipnz
  1630  0573  0AA2               	incf	___aldiv@divisor+2,f
  1631  0574  1903               	skipnz
  1632  0575  0AA3               	incf	___aldiv@divisor+3,f
  1633  0576  01AA               	clrf	___aldiv@sign
  1634  0577  0AAA               	incf	___aldiv@sign,f
  1635  0578                     l443:
  1636  0578  1FA7               	btfss	___aldiv@dividend+3,7
  1637  0579  2D7B               	goto	u771
  1638  057A  2D7C               	goto	u770
  1639  057B                     u771:
  1640  057B  2D8B               	goto	l1371
  1641  057C                     u770:
  1642  057C                     l1367:
  1643  057C  09A4               	comf	___aldiv@dividend,f
  1644  057D  09A5               	comf	___aldiv@dividend+1,f
  1645  057E  09A6               	comf	___aldiv@dividend+2,f
  1646  057F  09A7               	comf	___aldiv@dividend+3,f
  1647  0580  0AA4               	incf	___aldiv@dividend,f
  1648  0581  1903               	skipnz
  1649  0582  0AA5               	incf	___aldiv@dividend+1,f
  1650  0583  1903               	skipnz
  1651  0584  0AA6               	incf	___aldiv@dividend+2,f
  1652  0585  1903               	skipnz
  1653  0586  0AA7               	incf	___aldiv@dividend+3,f
  1654  0587                     l1369:
  1655  0587  3001               	movlw	1
  1656  0588  00A8               	movwf	??___aldiv
  1657  0589  0828               	movf	??___aldiv,w
  1658  058A  06AA               	xorwf	___aldiv@sign,f
  1659  058B                     l1371:
  1660  058B  3000               	movlw	0
  1661  058C  00AE               	movwf	___aldiv@quotient+3
  1662  058D  3000               	movlw	0
  1663  058E  00AD               	movwf	___aldiv@quotient+2
  1664  058F  3000               	movlw	0
  1665  0590  00AC               	movwf	___aldiv@quotient+1
  1666  0591  3000               	movlw	0
  1667  0592  00AB               	movwf	___aldiv@quotient
  1668  0593                     l1373:
  1669  0593  0823               	movf	___aldiv@divisor+3,w
  1670  0594  0422               	iorwf	___aldiv@divisor+2,w
  1671  0595  0421               	iorwf	___aldiv@divisor+1,w
  1672  0596  0420               	iorwf	___aldiv@divisor,w
  1673  0597  1903               	skipnz
  1674  0598  2D9A               	goto	u781
  1675  0599  2D9B               	goto	u780
  1676  059A                     u781:
  1677  059A  2DE8               	goto	l1393
  1678  059B                     u780:
  1679  059B                     l1375:
  1680  059B  01A9               	clrf	___aldiv@counter
  1681  059C  0AA9               	incf	___aldiv@counter,f
  1682  059D  2DAB               	goto	l1379
  1683  059E                     l1377:
  1684  059E  3001               	movlw	1
  1685  059F  00A8               	movwf	??___aldiv
  1686  05A0                     u795:
  1687  05A0  1003               	clrc
  1688  05A1  0DA0               	rlf	___aldiv@divisor,f
  1689  05A2  0DA1               	rlf	___aldiv@divisor+1,f
  1690  05A3  0DA2               	rlf	___aldiv@divisor+2,f
  1691  05A4  0DA3               	rlf	___aldiv@divisor+3,f
  1692  05A5  0BA8               	decfsz	??___aldiv,f
  1693  05A6  2DA0               	goto	u795
  1694  05A7  3001               	movlw	1
  1695  05A8  00A8               	movwf	??___aldiv
  1696  05A9  0828               	movf	??___aldiv,w
  1697  05AA  07A9               	addwf	___aldiv@counter,f
  1698  05AB                     l1379:
  1699  05AB  1FA3               	btfss	___aldiv@divisor+3,7
  1700  05AC  2DAE               	goto	u801
  1701  05AD  2DAF               	goto	u800
  1702  05AE                     u801:
  1703  05AE  2D9E               	goto	l1377
  1704  05AF                     u800:
  1705  05AF                     l1381:
  1706  05AF  3001               	movlw	1
  1707  05B0  00A8               	movwf	??___aldiv
  1708  05B1                     u815:
  1709  05B1  1003               	clrc
  1710  05B2  0DAB               	rlf	___aldiv@quotient,f
  1711  05B3  0DAC               	rlf	___aldiv@quotient+1,f
  1712  05B4  0DAD               	rlf	___aldiv@quotient+2,f
  1713  05B5  0DAE               	rlf	___aldiv@quotient+3,f
  1714  05B6  0BA8               	decfsz	??___aldiv,f
  1715  05B7  2DB1               	goto	u815
  1716  05B8                     l1383:
  1717  05B8  0823               	movf	___aldiv@divisor+3,w
  1718  05B9  0227               	subwf	___aldiv@dividend+3,w
  1719  05BA  1D03               	skipz
  1720  05BB  2DC6               	goto	u825
  1721  05BC  0822               	movf	___aldiv@divisor+2,w
  1722  05BD  0226               	subwf	___aldiv@dividend+2,w
  1723  05BE  1D03               	skipz
  1724  05BF  2DC6               	goto	u825
  1725  05C0  0821               	movf	___aldiv@divisor+1,w
  1726  05C1  0225               	subwf	___aldiv@dividend+1,w
  1727  05C2  1D03               	skipz
  1728  05C3  2DC6               	goto	u825
  1729  05C4  0820               	movf	___aldiv@divisor,w
  1730  05C5  0224               	subwf	___aldiv@dividend,w
  1731  05C6                     u825:
  1732  05C6  1C03               	skipc
  1733  05C7  2DC9               	goto	u821
  1734  05C8  2DCA               	goto	u820
  1735  05C9                     u821:
  1736  05C9  2DD9               	goto	l1389
  1737  05CA                     u820:
  1738  05CA                     l1385:
  1739  05CA  0820               	movf	___aldiv@divisor,w
  1740  05CB  02A4               	subwf	___aldiv@dividend,f
  1741  05CC  0821               	movf	___aldiv@divisor+1,w
  1742  05CD  1C03               	skipc
  1743  05CE  0F21               	incfsz	___aldiv@divisor+1,w
  1744  05CF  02A5               	subwf	___aldiv@dividend+1,f
  1745  05D0  0822               	movf	___aldiv@divisor+2,w
  1746  05D1  1C03               	skipc
  1747  05D2  0F22               	incfsz	___aldiv@divisor+2,w
  1748  05D3  02A6               	subwf	___aldiv@dividend+2,f
  1749  05D4  0823               	movf	___aldiv@divisor+3,w
  1750  05D5  1C03               	skipc
  1751  05D6  0F23               	incfsz	___aldiv@divisor+3,w
  1752  05D7  02A7               	subwf	___aldiv@dividend+3,f
  1753  05D8                     l1387:
  1754  05D8  142B               	bsf	___aldiv@quotient,0
  1755  05D9                     l1389:
  1756  05D9  3001               	movlw	1
  1757  05DA                     u835:
  1758  05DA  1003               	clrc
  1759  05DB  0CA3               	rrf	___aldiv@divisor+3,f
  1760  05DC  0CA2               	rrf	___aldiv@divisor+2,f
  1761  05DD  0CA1               	rrf	___aldiv@divisor+1,f
  1762  05DE  0CA0               	rrf	___aldiv@divisor,f
  1763  05DF  3EFF               	addlw	-1
  1764  05E0  1D03               	skipz
  1765  05E1  2DDA               	goto	u835
  1766  05E2                     l1391:
  1767  05E2  3001               	movlw	1
  1768  05E3  02A9               	subwf	___aldiv@counter,f
  1769  05E4  1D03               	btfss	3,2
  1770  05E5  2DE7               	goto	u841
  1771  05E6  2DE8               	goto	u840
  1772  05E7                     u841:
  1773  05E7  2DAF               	goto	l1381
  1774  05E8                     u840:
  1775  05E8                     l1393:
  1776  05E8  082A               	movf	___aldiv@sign,w
  1777  05E9  1903               	btfsc	3,2
  1778  05EA  2DEC               	goto	u851
  1779  05EB  2DED               	goto	u850
  1780  05EC                     u851:
  1781  05EC  2DF8               	goto	l1397
  1782  05ED                     u850:
  1783  05ED                     l1395:
  1784  05ED  09AB               	comf	___aldiv@quotient,f
  1785  05EE  09AC               	comf	___aldiv@quotient+1,f
  1786  05EF  09AD               	comf	___aldiv@quotient+2,f
  1787  05F0  09AE               	comf	___aldiv@quotient+3,f
  1788  05F1  0AAB               	incf	___aldiv@quotient,f
  1789  05F2  1903               	skipnz
  1790  05F3  0AAC               	incf	___aldiv@quotient+1,f
  1791  05F4  1903               	skipnz
  1792  05F5  0AAD               	incf	___aldiv@quotient+2,f
  1793  05F6  1903               	skipnz
  1794  05F7  0AAE               	incf	___aldiv@quotient+3,f
  1795  05F8                     l1397:
  1796  05F8  082E               	movf	___aldiv@quotient+3,w
  1797  05F9  00A3               	movwf	?___aldiv+3
  1798  05FA  082D               	movf	___aldiv@quotient+2,w
  1799  05FB  00A2               	movwf	?___aldiv+2
  1800  05FC  082C               	movf	___aldiv@quotient+1,w
  1801  05FD  00A1               	movwf	?___aldiv+1
  1802  05FE  082B               	movf	___aldiv@quotient,w
  1803  05FF  00A0               	movwf	?___aldiv
  1804  0600                     l453:
  1805  0600  0008               	return
  1806  0601                     __end_of___aldiv:
  1807                           
  1808                           	psect	text4
  1809  03A2                     __ptext4:	
  1810 ;; *************** function _TMR0_Unit *****************
  1811 ;; Defined at:
  1812 ;;		line 5 in file "Timer.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used:    1
  1832 ;; Hardware stack levels required when called:    3
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_main
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840                           
  1841                           ;psect for function _TMR0_Unit
  1842  03A2                     _TMR0_Unit:
  1843  03A2                     l1435:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _TMR0_Unit: [wreg]
  1846                           
  1847                           
  1848                           ;Timer.c: 7:     INTCONbits.GIE = 1;
  1849  03A2  178B               	bsf	11,7	;volatile
  1850                           
  1851                           ;Timer.c: 8:     INTCONbits.PEIE = 1;
  1852  03A3  170B               	bsf	11,6	;volatile
  1853                           
  1854                           ;Timer.c: 9:     INTCONbits.TMR0IE = 1;
  1855  03A4  168B               	bsf	11,5	;volatile
  1856                           
  1857                           ;Timer.c: 10:     INTCONbits.TMR0IF = 0;
  1858  03A5  110B               	bcf	11,2	;volatile
  1859                           
  1860                           ;Timer.c: 12:     (INTCONbits.GIE = 1);
  1861  03A6  178B               	bsf	11,7	;volatile
  1862  03A7                     l1437:
  1863                           
  1864                           ;Timer.c: 14:     TMR0=251;
  1865  03A7  30FB               	movlw	251
  1866  03A8  1283               	bcf	3,5	;RP0=0, select bank0
  1867  03A9  1303               	bcf	3,6	;RP1=0, select bank0
  1868  03AA  0081               	movwf	1	;volatile
  1869  03AB                     l1439:
  1870                           
  1871                           ;Timer.c: 15:     OPTION_REGbits.T0CS=0;
  1872  03AB  1683               	bsf	3,5	;RP0=1, select bank1
  1873  03AC  1303               	bcf	3,6	;RP1=0, select bank1
  1874  03AD  1281               	bcf	1,5	;volatile
  1875  03AE                     l1441:
  1876                           
  1877                           ;Timer.c: 16:     OPTION_REGbits.T0SE=0;
  1878  03AE  1201               	bcf	1,4	;volatile
  1879  03AF                     l1443:
  1880                           
  1881                           ;Timer.c: 17:     OPTION_REGbits.PSA=0;
  1882  03AF  1181               	bcf	1,3	;volatile
  1883  03B0                     l1445:
  1884                           
  1885                           ;Timer.c: 19:     OPTION_REGbits.PS0=1;
  1886  03B0  1401               	bsf	1,0	;volatile
  1887  03B1                     l1447:
  1888                           
  1889                           ;Timer.c: 20:     OPTION_REGbits.PS1=1;
  1890  03B1  1481               	bsf	1,1	;volatile
  1891  03B2                     l1449:
  1892                           
  1893                           ;Timer.c: 21:     OPTION_REGbits.PS2=1;
  1894  03B2  1501               	bsf	1,2	;volatile
  1895  03B3                     l203:
  1896  03B3  0008               	return
  1897  03B4                     __end_of_TMR0_Unit:
  1898                           
  1899                           	psect	text5
  1900  0492                     __ptext5:	
  1901 ;; *************** function _Lcd_Write_String *****************
  1902 ;; Defined at:
  1903 ;;		line 101 in file "Lcd.c"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;  a               2    5[BANK0 ] PTR unsigned char 
  1906 ;;		 -> STR_7(2), STR_4(2), RAM(512), 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;  i               2    7[BANK0 ] int 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1918 ;;      Params:         0       2       0       0       0
  1919 ;;      Locals:         0       2       0       0       0
  1920 ;;      Temps:          0       0       0       0       0
  1921 ;;      Totals:         0       4       0       0       0
  1922 ;;Total ram usage:        4 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    5
  1925 ;; This function calls:
  1926 ;;		_Lcd_Write_Char
  1927 ;; This function is called by:
  1928 ;;		_main
  1929 ;;		_Lcd_Time
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           
  1934                           ;psect for function _Lcd_Write_String
  1935  0492                     _Lcd_Write_String:
  1936  0492                     l1473:	
  1937                           ;incstack = 0
  1938                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1939                           
  1940                           
  1941                           ;Lcd.c: 101: void Lcd_Write_String(char *a);Lcd.c: 102: {;Lcd.c: 103:  int i;;Lcd.c: 104
      +                          :  for(i=0;a[i]!='\0';i++)
  1942  0492  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0493  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0494  01A7               	clrf	Lcd_Write_String@i
  1945  0495  01A8               	clrf	Lcd_Write_String@i+1
  1946  0496  2CB1               	goto	l1479
  1947  0497                     l1475:
  1948                           
  1949                           ;Lcd.c: 105:     Lcd_Write_Char(a[i]);
  1950  0497  0827               	movf	Lcd_Write_String@i,w
  1951  0498  0725               	addwf	Lcd_Write_String@a,w
  1952  0499  0084               	movwf	4
  1953  049A  0828               	movf	Lcd_Write_String@i+1,w
  1954  049B  1803               	skipnc
  1955  049C  0A28               	incf	Lcd_Write_String@i+1,w
  1956  049D  0726               	addwf	Lcd_Write_String@a+1,w
  1957  049E  00FF               	movwf	btemp+1
  1958  049F  120A  118A  2015  120A  118A  	fcall	stringtab
  1959  04A4  120A  118A  24C4  120A  118A  	fcall	_Lcd_Write_Char
  1960  04A9                     l1477:
  1961  04A9  3001               	movlw	1
  1962  04AA  1283               	bcf	3,5	;RP0=0, select bank0
  1963  04AB  1303               	bcf	3,6	;RP1=0, select bank0
  1964  04AC  07A7               	addwf	Lcd_Write_String@i,f
  1965  04AD  1803               	skipnc
  1966  04AE  0AA8               	incf	Lcd_Write_String@i+1,f
  1967  04AF  3000               	movlw	0
  1968  04B0  07A8               	addwf	Lcd_Write_String@i+1,f
  1969  04B1                     l1479:
  1970  04B1  0827               	movf	Lcd_Write_String@i,w
  1971  04B2  0725               	addwf	Lcd_Write_String@a,w
  1972  04B3  0084               	movwf	4
  1973  04B4  0828               	movf	Lcd_Write_String@i+1,w
  1974  04B5  1803               	skipnc
  1975  04B6  0A28               	incf	Lcd_Write_String@i+1,w
  1976  04B7  0726               	addwf	Lcd_Write_String@a+1,w
  1977  04B8  00FF               	movwf	btemp+1
  1978  04B9  120A  118A  2015  120A  118A  	fcall	stringtab
  1979  04BE  3A00               	xorlw	0
  1980  04BF  1D03               	skipz
  1981  04C0  2CC2               	goto	u971
  1982  04C1  2CC3               	goto	u970
  1983  04C2                     u971:
  1984  04C2  2C97               	goto	l1475
  1985  04C3                     u970:
  1986  04C3                     l179:
  1987  04C3  0008               	return
  1988  04C4                     __end_of_Lcd_Write_String:
  1989                           
  1990                           	psect	text6
  1991  04C4                     __ptext6:	
  1992 ;; *************** function _Lcd_Write_Char *****************
  1993 ;; Defined at:
  1994 ;;		line 85 in file "Lcd.c"
  1995 ;; Parameters:    Size  Location     Type
  1996 ;;  a               1    wreg     unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  a               1    4[BANK0 ] unsigned char 
  1999 ;;  y               1    3[BANK0 ] unsigned char 
  2000 ;;  temp            1    2[BANK0 ] unsigned char 
  2001 ;; Return value:  Size  Location     Type
  2002 ;;                  1    wreg      void 
  2003 ;; Registers used:
  2004 ;;		wreg, status,2, status,0, pclath, cstack
  2005 ;; Tracked objects:
  2006 ;;		On entry : 0/0
  2007 ;;		On exit  : 0/0
  2008 ;;		Unchanged: 0/0
  2009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2010 ;;      Params:         0       0       0       0       0
  2011 ;;      Locals:         0       3       0       0       0
  2012 ;;      Temps:          0       1       0       0       0
  2013 ;;      Totals:         0       4       0       0       0
  2014 ;;Total ram usage:        4 bytes
  2015 ;; Hardware stack levels used:    1
  2016 ;; Hardware stack levels required when called:    4
  2017 ;; This function calls:
  2018 ;;		_Lcd_Port
  2019 ;; This function is called by:
  2020 ;;		_Lcd_Write_String
  2021 ;; This function uses a non-reentrant model
  2022 ;;
  2023                           
  2024                           
  2025                           ;psect for function _Lcd_Write_Char
  2026  04C4                     _Lcd_Write_Char:
  2027                           
  2028                           ;incstack = 0
  2029                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  2030                           ;Lcd_Write_Char@a stored from wreg
  2031  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2032  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2033  04C6  00A4               	movwf	Lcd_Write_Char@a
  2034  04C7                     l1341:
  2035                           
  2036                           ;Lcd.c: 85: void Lcd_Write_Char(char a);Lcd.c: 86: {;Lcd.c: 87:    char temp,y;;Lcd.c: 8
      +                          8:    temp = a&0x0F;
  2037  04C7  0824               	movf	Lcd_Write_Char@a,w
  2038  04C8  390F               	andlw	15
  2039  04C9  00A1               	movwf	??_Lcd_Write_Char
  2040  04CA  0821               	movf	??_Lcd_Write_Char,w
  2041  04CB  00A2               	movwf	Lcd_Write_Char@temp
  2042                           
  2043                           ;Lcd.c: 89:    y = a&0xF0;
  2044  04CC  0824               	movf	Lcd_Write_Char@a,w
  2045  04CD  39F0               	andlw	240
  2046  04CE  00A1               	movwf	??_Lcd_Write_Char
  2047  04CF  0821               	movf	??_Lcd_Write_Char,w
  2048  04D0  00A3               	movwf	Lcd_Write_Char@y
  2049  04D1                     l1343:
  2050                           
  2051                           ;Lcd.c: 90:    RD0 = 1;
  2052  04D1  1408               	bsf	8,0	;volatile
  2053  04D2                     l1345:
  2054                           
  2055                           ;Lcd.c: 91:    Lcd_Port(y>>4);
  2056  04D2  0823               	movf	Lcd_Write_Char@y,w
  2057  04D3  00A1               	movwf	??_Lcd_Write_Char
  2058  04D4  3004               	movlw	4
  2059  04D5                     u755:
  2060  04D5  1003               	clrc
  2061  04D6  0CA1               	rrf	??_Lcd_Write_Char,f
  2062  04D7  3EFF               	addlw	-1
  2063  04D8  1D03               	skipz
  2064  04D9  2CD5               	goto	u755
  2065  04DA  0821               	movf	??_Lcd_Write_Char,w
  2066  04DB  120A  118A  23D0  120A  118A  	fcall	_Lcd_Port
  2067  04E0                     l1347:
  2068                           
  2069                           ;Lcd.c: 92:    RD2 = 1;
  2070  04E0  1283               	bcf	3,5	;RP0=0, select bank0
  2071  04E1  1303               	bcf	3,6	;RP1=0, select bank0
  2072  04E2  1508               	bsf	8,2	;volatile
  2073  04E3                     l1349:
  2074                           
  2075                           ;Lcd.c: 93:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2076  04E3  3041               	movlw	65
  2077  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  2078  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  2079  04E6  00A1               	movwf	??_Lcd_Write_Char
  2080  04E7                     u1397:
  2081  04E7  0BA1               	decfsz	??_Lcd_Write_Char,f
  2082  04E8  2CE7               	goto	u1397
  2083  04E9  2CEA               	nop2
  2084  04EA                     l1351:
  2085                           
  2086                           ;Lcd.c: 94:    RD2 = 0;
  2087  04EA  1283               	bcf	3,5	;RP0=0, select bank0
  2088  04EB  1303               	bcf	3,6	;RP1=0, select bank0
  2089  04EC  1108               	bcf	8,2	;volatile
  2090  04ED                     l1353:
  2091                           
  2092                           ;Lcd.c: 95:    Lcd_Port(temp);
  2093  04ED  0822               	movf	Lcd_Write_Char@temp,w
  2094  04EE  120A  118A  23D0  120A  118A  	fcall	_Lcd_Port
  2095  04F3                     l1355:
  2096                           
  2097                           ;Lcd.c: 96:    RD2 = 1;
  2098  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  2099  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  2100  04F5  1508               	bsf	8,2	;volatile
  2101  04F6                     l1357:
  2102                           
  2103                           ;Lcd.c: 97:    _delay((unsigned long)((40)*(20000000/4000000.0)));
  2104  04F6  3041               	movlw	65
  2105  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  2106  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  2107  04F9  00A1               	movwf	??_Lcd_Write_Char
  2108  04FA                     u1407:
  2109  04FA  0BA1               	decfsz	??_Lcd_Write_Char,f
  2110  04FB  2CFA               	goto	u1407
  2111  04FC  2CFD               	nop2
  2112  04FD                     l1359:
  2113                           
  2114                           ;Lcd.c: 98:    RD2 = 0;
  2115  04FD  1283               	bcf	3,5	;RP0=0, select bank0
  2116  04FE  1303               	bcf	3,6	;RP1=0, select bank0
  2117  04FF  1108               	bcf	8,2	;volatile
  2118  0500                     l173:
  2119  0500  0008               	return
  2120  0501                     __end_of_Lcd_Write_Char:
  2121                           
  2122                           	psect	text7
  2123  0501                     __ptext7:	
  2124 ;; *************** function _Lcd_Init *****************
  2125 ;; Defined at:
  2126 ;;		line 66 in file "Lcd.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      void 
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0, pclath, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       0       0       0       0
  2141 ;;      Locals:         0       0       0       0       0
  2142 ;;      Temps:          0       2       0       0       0
  2143 ;;      Totals:         0       2       0       0       0
  2144 ;;Total ram usage:        2 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    5
  2147 ;; This function calls:
  2148 ;;		_Lcd_Cmd
  2149 ;;		_Lcd_Port
  2150 ;; This function is called by:
  2151 ;;		_main
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           
  2156                           ;psect for function _Lcd_Init
  2157  0501                     _Lcd_Init:
  2158  0501                     l1453:	
  2159                           ;incstack = 0
  2160                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  2161                           
  2162                           
  2163                           ;Lcd.c: 68:   Lcd_Port(0x00);
  2164  0501  3000               	movlw	0
  2165  0502  120A  118A  23D0  120A  118A  	fcall	_Lcd_Port
  2166  0507                     l1455:
  2167                           
  2168                           ;Lcd.c: 69:    _delay((unsigned long)((20)*(20000000/4000.0)));
  2169  0507  3082               	movlw	130
  2170  0508  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0509  1303               	bcf	3,6	;RP1=0, select bank0
  2172  050A  00A5               	movwf	??_Lcd_Init+1
  2173  050B  30DD               	movlw	221
  2174  050C  00A4               	movwf	??_Lcd_Init
  2175  050D                     u1417:
  2176  050D  0BA4               	decfsz	??_Lcd_Init,f
  2177  050E  2D0D               	goto	u1417
  2178  050F  0BA5               	decfsz	??_Lcd_Init+1,f
  2179  0510  2D0D               	goto	u1417
  2180  0511                     l1457:
  2181                           
  2182                           ;Lcd.c: 70:   Lcd_Cmd(0x03);
  2183  0511  3003               	movlw	3
  2184  0512  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2185                           
  2186                           ;Lcd.c: 71:  _delay((unsigned long)((5)*(20000000/4000.0)));
  2187  0517  3021               	movlw	33
  2188  0518  1283               	bcf	3,5	;RP0=0, select bank0
  2189  0519  1303               	bcf	3,6	;RP1=0, select bank0
  2190  051A  00A5               	movwf	??_Lcd_Init+1
  2191  051B  3075               	movlw	117
  2192  051C  00A4               	movwf	??_Lcd_Init
  2193  051D                     u1427:
  2194  051D  0BA4               	decfsz	??_Lcd_Init,f
  2195  051E  2D1D               	goto	u1427
  2196  051F  0BA5               	decfsz	??_Lcd_Init+1,f
  2197  0520  2D1D               	goto	u1427
  2198  0521  2D22               	nop2
  2199  0522                     l1459:
  2200                           
  2201                           ;Lcd.c: 72:   Lcd_Cmd(0x03);
  2202  0522  3003               	movlw	3
  2203  0523  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2204  0528                     l1461:
  2205                           
  2206                           ;Lcd.c: 73:  _delay((unsigned long)((11)*(20000000/4000.0)));
  2207  0528  3048               	movlw	72
  2208  0529  1283               	bcf	3,5	;RP0=0, select bank0
  2209  052A  1303               	bcf	3,6	;RP1=0, select bank0
  2210  052B  00A5               	movwf	??_Lcd_Init+1
  2211  052C  306B               	movlw	107
  2212  052D  00A4               	movwf	??_Lcd_Init
  2213  052E                     u1437:
  2214  052E  0BA4               	decfsz	??_Lcd_Init,f
  2215  052F  2D2E               	goto	u1437
  2216  0530  0BA5               	decfsz	??_Lcd_Init+1,f
  2217  0531  2D2E               	goto	u1437
  2218  0532  2D33               	nop2
  2219                           
  2220                           ;Lcd.c: 74:   Lcd_Cmd(0x03);
  2221  0533  3003               	movlw	3
  2222  0534  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2223                           
  2224                           ;Lcd.c: 76:   Lcd_Cmd(0x02);
  2225  0539  3002               	movlw	2
  2226  053A  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2227                           
  2228                           ;Lcd.c: 77:   Lcd_Cmd(0x02);
  2229  053F  3002               	movlw	2
  2230  0540  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2231                           
  2232                           ;Lcd.c: 78:   Lcd_Cmd(0x08);
  2233  0545  3008               	movlw	8
  2234  0546  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2235                           
  2236                           ;Lcd.c: 79:   Lcd_Cmd(0x00);
  2237  054B  3000               	movlw	0
  2238  054C  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2239                           
  2240                           ;Lcd.c: 80:   Lcd_Cmd(0x0C);
  2241  0551  300C               	movlw	12
  2242  0552  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2243                           
  2244                           ;Lcd.c: 81:   Lcd_Cmd(0x00);
  2245  0557  3000               	movlw	0
  2246  0558  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2247                           
  2248                           ;Lcd.c: 82:   Lcd_Cmd(0x06);
  2249  055D  3006               	movlw	6
  2250  055E  120A  118A  23B4  120A  118A  	fcall	_Lcd_Cmd
  2251  0563                     l170:
  2252  0563  0008               	return
  2253  0564                     __end_of_Lcd_Init:
  2254                           
  2255                           	psect	text8
  2256  03B4                     __ptext8:	
  2257 ;; *************** function _Lcd_Cmd *****************
  2258 ;; Defined at:
  2259 ;;		line 30 in file "Lcd.c"
  2260 ;; Parameters:    Size  Location     Type
  2261 ;;  a               1    wreg     unsigned char 
  2262 ;; Auto vars:     Size  Location     Type
  2263 ;;  a               1    3[BANK0 ] unsigned char 
  2264 ;; Return value:  Size  Location     Type
  2265 ;;                  1    wreg      void 
  2266 ;; Registers used:
  2267 ;;		wreg, status,2, status,0, pclath, cstack
  2268 ;; Tracked objects:
  2269 ;;		On entry : 0/0
  2270 ;;		On exit  : 0/0
  2271 ;;		Unchanged: 0/0
  2272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2273 ;;      Params:         0       0       0       0       0
  2274 ;;      Locals:         0       1       0       0       0
  2275 ;;      Temps:          0       2       0       0       0
  2276 ;;      Totals:         0       3       0       0       0
  2277 ;;Total ram usage:        3 bytes
  2278 ;; Hardware stack levels used:    1
  2279 ;; Hardware stack levels required when called:    4
  2280 ;; This function calls:
  2281 ;;		_Lcd_Port
  2282 ;; This function is called by:
  2283 ;;		_Lcd_Init
  2284 ;;		_Lcd_Clear
  2285 ;;		_Lcd_Set_Cursor
  2286 ;;		_Lcd_Shift_Right
  2287 ;;		_Lcd_Shift_Left
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           
  2292                           ;psect for function _Lcd_Cmd
  2293  03B4                     _Lcd_Cmd:
  2294                           
  2295                           ;incstack = 0
  2296                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2297                           ;Lcd_Cmd@a stored from wreg
  2298  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  2299  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  2300  03B6  00A3               	movwf	Lcd_Cmd@a
  2301  03B7                     l1331:
  2302                           
  2303                           ;Lcd.c: 30: void Lcd_Cmd(char a);Lcd.c: 31: {;Lcd.c: 32:  RD0 = 0;
  2304  03B7  1008               	bcf	8,0	;volatile
  2305  03B8                     l1333:
  2306                           
  2307                           ;Lcd.c: 33:  Lcd_Port(a);
  2308  03B8  0823               	movf	Lcd_Cmd@a,w
  2309  03B9  120A  118A  23D0  120A  118A  	fcall	_Lcd_Port
  2310  03BE                     l1335:
  2311                           
  2312                           ;Lcd.c: 34:  RD2 = 1;
  2313  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2314  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2315  03C0  1508               	bsf	8,2	;volatile
  2316  03C1                     l1337:
  2317                           
  2318                           ;Lcd.c: 35:         _delay((unsigned long)((4)*(20000000/4000.0)));
  2319  03C1  301A               	movlw	26
  2320  03C2  1283               	bcf	3,5	;RP0=0, select bank0
  2321  03C3  1303               	bcf	3,6	;RP1=0, select bank0
  2322  03C4  00A2               	movwf	??_Lcd_Cmd+1
  2323  03C5  30F7               	movlw	247
  2324  03C6  00A1               	movwf	??_Lcd_Cmd
  2325  03C7                     u1447:
  2326  03C7  0BA1               	decfsz	??_Lcd_Cmd,f
  2327  03C8  2BC7               	goto	u1447
  2328  03C9  0BA2               	decfsz	??_Lcd_Cmd+1,f
  2329  03CA  2BC7               	goto	u1447
  2330  03CB  2BCC               	nop2
  2331  03CC                     l1339:
  2332                           
  2333                           ;Lcd.c: 36:         RD2 = 0;
  2334  03CC  1283               	bcf	3,5	;RP0=0, select bank0
  2335  03CD  1303               	bcf	3,6	;RP1=0, select bank0
  2336  03CE  1108               	bcf	8,2	;volatile
  2337  03CF                     l158:
  2338  03CF  0008               	return
  2339  03D0                     __end_of_Lcd_Cmd:
  2340                           
  2341                           	psect	text9
  2342  03D0                     __ptext9:	
  2343 ;; *************** function _Lcd_Port *****************
  2344 ;; Defined at:
  2345 ;;		line 7 in file "Lcd.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  a               1    wreg     unsigned char 
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  a               1    0[BANK0 ] unsigned char 
  2350 ;; Return value:  Size  Location     Type
  2351 ;;                  1    wreg      void 
  2352 ;; Registers used:
  2353 ;;		wreg
  2354 ;; Tracked objects:
  2355 ;;		On entry : 0/0
  2356 ;;		On exit  : 0/0
  2357 ;;		Unchanged: 0/0
  2358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2359 ;;      Params:         0       0       0       0       0
  2360 ;;      Locals:         0       1       0       0       0
  2361 ;;      Temps:          0       0       0       0       0
  2362 ;;      Totals:         0       1       0       0       0
  2363 ;;Total ram usage:        1 bytes
  2364 ;; Hardware stack levels used:    1
  2365 ;; Hardware stack levels required when called:    3
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_Lcd_Cmd
  2370 ;;		_Lcd_Init
  2371 ;;		_Lcd_Write_Char
  2372 ;; This function uses a non-reentrant model
  2373 ;;
  2374                           
  2375                           
  2376                           ;psect for function _Lcd_Port
  2377  03D0                     _Lcd_Port:
  2378                           
  2379                           ;incstack = 0
  2380                           ; Regs used in _Lcd_Port: [wreg]
  2381                           ;Lcd_Port@a stored from wreg
  2382  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  2383  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  2384  03D2  00A0               	movwf	Lcd_Port@a
  2385  03D3                     l1321:
  2386                           
  2387                           ;Lcd.c: 7: void Lcd_Port(char a);Lcd.c: 8: {;Lcd.c: 9:     RD1 = 0;
  2388  03D3  1088               	bcf	8,1	;volatile
  2389                           
  2390                           ;Lcd.c: 10:  if(a & 1)
  2391  03D4  1C20               	btfss	Lcd_Port@a,0
  2392  03D5  2BD7               	goto	u711
  2393  03D6  2BD8               	goto	u710
  2394  03D7                     u711:
  2395  03D7  2BDA               	goto	l147
  2396  03D8                     u710:
  2397  03D8                     l1323:
  2398                           
  2399                           ;Lcd.c: 11:   RD4 = 1;
  2400  03D8  1608               	bsf	8,4	;volatile
  2401  03D9  2BDB               	goto	l148
  2402  03DA                     l147:	
  2403                           ;Lcd.c: 12:  else
  2404                           
  2405                           
  2406                           ;Lcd.c: 13:   RD4 = 0;
  2407  03DA  1208               	bcf	8,4	;volatile
  2408  03DB                     l148:
  2409                           
  2410                           ;Lcd.c: 15:  if(a & 2)
  2411  03DB  1CA0               	btfss	Lcd_Port@a,1
  2412  03DC  2BDE               	goto	u721
  2413  03DD  2BDF               	goto	u720
  2414  03DE                     u721:
  2415  03DE  2BE1               	goto	l149
  2416  03DF                     u720:
  2417  03DF                     l1325:
  2418                           
  2419                           ;Lcd.c: 16:   RD5 = 1;
  2420  03DF  1688               	bsf	8,5	;volatile
  2421  03E0  2BE2               	goto	l150
  2422  03E1                     l149:	
  2423                           ;Lcd.c: 17:  else
  2424                           
  2425                           
  2426                           ;Lcd.c: 18:   RD5 = 0;
  2427  03E1  1288               	bcf	8,5	;volatile
  2428  03E2                     l150:
  2429                           
  2430                           ;Lcd.c: 20:  if(a & 4)
  2431  03E2  1D20               	btfss	Lcd_Port@a,2
  2432  03E3  2BE5               	goto	u731
  2433  03E4  2BE6               	goto	u730
  2434  03E5                     u731:
  2435  03E5  2BE8               	goto	l151
  2436  03E6                     u730:
  2437  03E6                     l1327:
  2438                           
  2439                           ;Lcd.c: 21:   RD6 = 1;
  2440  03E6  1708               	bsf	8,6	;volatile
  2441  03E7  2BE9               	goto	l152
  2442  03E8                     l151:	
  2443                           ;Lcd.c: 22:  else
  2444                           
  2445                           
  2446                           ;Lcd.c: 23:   RD6 = 0;
  2447  03E8  1308               	bcf	8,6	;volatile
  2448  03E9                     l152:
  2449                           
  2450                           ;Lcd.c: 25:  if(a & 8)
  2451  03E9  1DA0               	btfss	Lcd_Port@a,3
  2452  03EA  2BEC               	goto	u741
  2453  03EB  2BED               	goto	u740
  2454  03EC                     u741:
  2455  03EC  2BEF               	goto	l153
  2456  03ED                     u740:
  2457  03ED                     l1329:
  2458                           
  2459                           ;Lcd.c: 26:   RD7 = 1;
  2460  03ED  1788               	bsf	8,7	;volatile
  2461  03EE  2BF0               	goto	l155
  2462  03EF                     l153:	
  2463                           ;Lcd.c: 27:  else
  2464                           
  2465                           
  2466                           ;Lcd.c: 28:   RD7 = 0;
  2467  03EF  1388               	bcf	8,7	;volatile
  2468  03F0                     l155:
  2469  03F0  0008               	return
  2470  03F1                     __end_of_Lcd_Port:
  2471                           
  2472                           	psect	text10
  2473  0464                     __ptext10:	
  2474 ;; *************** function _ADC_Read *****************
  2475 ;; Defined at:
  2476 ;;		line 21 in file "Adc.c"
  2477 ;; Parameters:    Size  Location     Type
  2478 ;;  channel         1    wreg     unsigned char 
  2479 ;; Auto vars:     Size  Location     Type
  2480 ;;  channel         1    4[BANK0 ] unsigned char 
  2481 ;; Return value:  Size  Location     Type
  2482 ;;                  2    0[BANK0 ] unsigned int 
  2483 ;; Registers used:
  2484 ;;		wreg, status,2, status,0
  2485 ;; Tracked objects:
  2486 ;;		On entry : 0/0
  2487 ;;		On exit  : 0/0
  2488 ;;		Unchanged: 0/0
  2489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2490 ;;      Params:         0       2       0       0       0
  2491 ;;      Locals:         0       1       0       0       0
  2492 ;;      Temps:          0       2       0       0       0
  2493 ;;      Totals:         0       5       0       0       0
  2494 ;;Total ram usage:        5 bytes
  2495 ;; Hardware stack levels used:    1
  2496 ;; Hardware stack levels required when called:    3
  2497 ;; This function calls:
  2498 ;;		Nothing
  2499 ;; This function is called by:
  2500 ;;		_main
  2501 ;;		_Joystick
  2502 ;; This function uses a non-reentrant model
  2503 ;;
  2504                           
  2505                           
  2506                           ;psect for function _ADC_Read
  2507  0464                     _ADC_Read:
  2508                           
  2509                           ;incstack = 0
  2510                           ; Regs used in _ADC_Read: [wreg+status,2+status,0]
  2511                           ;ADC_Read@channel stored from wreg
  2512  0464  1283               	bcf	3,5	;RP0=0, select bank0
  2513  0465  1303               	bcf	3,6	;RP1=0, select bank0
  2514  0466  00A4               	movwf	ADC_Read@channel
  2515  0467                     l1463:
  2516                           
  2517                           ;Adc.c: 21: unsigned int ADC_Read(unsigned char channel);Adc.c: 22: {;Adc.c: 24:   ADCON
      +                          0 &= 0x11000101;
  2518  0467  3001               	movlw	1
  2519  0468  00A2               	movwf	??_ADC_Read
  2520  0469  0822               	movf	??_ADC_Read,w
  2521  046A  059F               	andwf	31,f	;volatile
  2522                           
  2523                           ;Adc.c: 26:   ADCON0 |= channel<<3;
  2524  046B  0824               	movf	ADC_Read@channel,w	;volatile
  2525  046C  00A2               	movwf	??_ADC_Read
  2526  046D  3002               	movlw	2
  2527  046E                     u955:
  2528  046E  1003               	clrc
  2529  046F  0DA2               	rlf	??_ADC_Read,f
  2530  0470  3EFF               	addlw	-1
  2531  0471  1D03               	skipz
  2532  0472  2C6E               	goto	u955
  2533  0473  1003               	clrc
  2534  0474  0D22               	rlf	??_ADC_Read,w
  2535  0475  00A3               	movwf	??_ADC_Read+1
  2536  0476  0823               	movf	??_ADC_Read+1,w
  2537  0477  049F               	iorwf	31,f	;volatile
  2538  0478                     l1465:
  2539                           
  2540                           ;Adc.c: 28:   _delay((unsigned long)((2)*(20000000/4000.0)));
  2541  0478  300D               	movlw	13
  2542  0479  1283               	bcf	3,5	;RP0=0, select bank0
  2543  047A  1303               	bcf	3,6	;RP1=0, select bank0
  2544  047B  00A3               	movwf	??_ADC_Read+1
  2545  047C  30FB               	movlw	251
  2546  047D  00A2               	movwf	??_ADC_Read
  2547  047E                     u1457:
  2548  047E  0BA2               	decfsz	??_ADC_Read,f
  2549  047F  2C7E               	goto	u1457
  2550  0480  0BA3               	decfsz	??_ADC_Read+1,f
  2551  0481  2C7E               	goto	u1457
  2552  0482                     l1467:
  2553                           
  2554                           ;Adc.c: 30:   GO_nDONE = 1;
  2555  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2556  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2557  0484  151F               	bsf	31,2	;volatile
  2558  0485                     l272:	
  2559                           ;Adc.c: 32:   while(GO_nDONE);
  2560                           
  2561  0485  191F               	btfsc	31,2	;volatile
  2562  0486  2C88               	goto	u961
  2563  0487  2C89               	goto	u960
  2564  0488                     u961:
  2565  0488  2C85               	goto	l272
  2566  0489                     u960:
  2567  0489                     l1469:
  2568                           
  2569                           ;Adc.c: 34:   return ((ADRESH<<8)+ADRESL);
  2570  0489  081E               	movf	30,w	;volatile
  2571  048A  00A1               	movwf	?_ADC_Read+1
  2572  048B  1683               	bsf	3,5	;RP0=1, select bank1
  2573  048C  1303               	bcf	3,6	;RP1=0, select bank1
  2574  048D  081E               	movf	30,w	;volatile
  2575  048E  1283               	bcf	3,5	;RP0=0, select bank0
  2576  048F  1303               	bcf	3,6	;RP1=0, select bank0
  2577  0490  00A0               	movwf	?_ADC_Read
  2578  0491                     l275:
  2579  0491  0008               	return
  2580  0492                     __end_of_ADC_Read:
  2581                           
  2582                           	psect	text11
  2583  038D                     __ptext11:	
  2584 ;; *************** function _ADC_Initialize *****************
  2585 ;; Defined at:
  2586 ;;		line 11 in file "Adc.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;		None
  2589 ;; Auto vars:     Size  Location     Type
  2590 ;;		None
  2591 ;; Return value:  Size  Location     Type
  2592 ;;                  1    wreg      void 
  2593 ;; Registers used:
  2594 ;;		wreg
  2595 ;; Tracked objects:
  2596 ;;		On entry : 0/0
  2597 ;;		On exit  : 0/0
  2598 ;;		Unchanged: 0/0
  2599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2600 ;;      Params:         0       0       0       0       0
  2601 ;;      Locals:         0       0       0       0       0
  2602 ;;      Temps:          0       0       0       0       0
  2603 ;;      Totals:         0       0       0       0       0
  2604 ;;Total ram usage:        0 bytes
  2605 ;; Hardware stack levels used:    1
  2606 ;; Hardware stack levels required when called:    3
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		_main
  2611 ;; This function uses a non-reentrant model
  2612 ;;
  2613                           
  2614                           
  2615                           ;psect for function _ADC_Initialize
  2616  038D                     _ADC_Initialize:
  2617  038D                     l1451:	
  2618                           ;incstack = 0
  2619                           ; Regs used in _ADC_Initialize: [wreg]
  2620                           
  2621                           
  2622                           ;Adc.c: 14:   ADCON0 = 0b01000001;
  2623  038D  3041               	movlw	65
  2624  038E  1283               	bcf	3,5	;RP0=0, select bank0
  2625  038F  1303               	bcf	3,6	;RP1=0, select bank0
  2626  0390  009F               	movwf	31	;volatile
  2627                           
  2628                           ;Adc.c: 16:   ADCON1 = 0b11000000;
  2629  0391  30C0               	movlw	192
  2630  0392  1683               	bsf	3,5	;RP0=1, select bank1
  2631  0393  1303               	bcf	3,6	;RP1=0, select bank1
  2632  0394  009F               	movwf	31	;volatile
  2633  0395                     l269:
  2634  0395  0008               	return
  2635  0396                     __end_of_ADC_Initialize:
  2636                           
  2637                           	psect	text12
  2638  0416                     __ptext12:	
  2639 ;; *************** function _ISR *****************
  2640 ;; Defined at:
  2641 ;;		line 72 in file "Mainprj2.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2655 ;;      Params:         0       0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0
  2657 ;;      Temps:          4       0       0       0       0
  2658 ;;      Totals:         4       0       0       0       0
  2659 ;;Total ram usage:        4 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    2
  2662 ;; This function calls:
  2663 ;;		_UART_Write_Text
  2664 ;; This function is called by:
  2665 ;;		Interrupt level 1
  2666 ;; This function uses a non-reentrant model
  2667 ;;
  2668                           
  2669                           
  2670                           ;psect for function _ISR
  2671  0416                     _ISR:
  2672  0416                     i1l1579:
  2673                           
  2674                           ;Mainprj2.c: 73:     if(INTCONbits.TMR0IF)
  2675  0416  1D0B               	btfss	11,2	;volatile
  2676  0417  2C19               	goto	u116_21
  2677  0418  2C1A               	goto	u116_20
  2678  0419                     u116_21:
  2679  0419  2C30               	goto	i1l126
  2680  041A                     u116_20:
  2681  041A                     i1l1581:
  2682                           
  2683                           ;Mainprj2.c: 74:     {;Mainprj2.c: 75:       INTCONbits.TMR0IF=0;
  2684  041A  110B               	bcf	11,2	;volatile
  2685  041B                     i1l1583:
  2686                           
  2687                           ;Mainprj2.c: 76:       count++;
  2688  041B  3001               	movlw	1
  2689  041C  07F9               	addwf	_count,f
  2690  041D  1803               	skipnc
  2691  041E  0AFA               	incf	_count+1,f
  2692  041F  3000               	movlw	0
  2693  0420  07FA               	addwf	_count+1,f
  2694  0421                     i1l1585:
  2695                           
  2696                           ;Mainprj2.c: 77:       if (count==76) {
  2697  0421  304C               	movlw	76
  2698  0422  0679               	xorwf	_count,w
  2699  0423  047A               	iorwf	_count+1,w
  2700  0424  1D03               	btfss	3,2
  2701  0425  2C27               	goto	u117_21
  2702  0426  2C28               	goto	u117_20
  2703  0427                     u117_21:
  2704  0427  2C30               	goto	i1l126
  2705  0428                     u117_20:
  2706  0428                     i1l1587:
  2707                           
  2708                           ;Mainprj2.c: 78:           UART_Write_Text("Von");
  2709  0428  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2710  0429  120A  118A  23F1  120A  118A  	fcall	_UART_Write_Text
  2711  042E                     i1l1589:
  2712                           
  2713                           ;Mainprj2.c: 79:           count=0;
  2714  042E  01F9               	clrf	_count
  2715  042F  01FA               	clrf	_count+1
  2716  0430                     i1l126:
  2717  0430  0878               	movf	??_ISR+3,w
  2718  0431  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0432  1303               	bcf	3,6	;RP1=0, select bank0
  2720  0433  00FF               	movwf	btemp+1
  2721  0434  0877               	movf	??_ISR+2,w
  2722  0435  008A               	movwf	10
  2723  0436  0876               	movf	??_ISR+1,w
  2724  0437  0084               	movwf	4
  2725  0438  0E75               	swapf	??_ISR,w
  2726  0439  0083               	movwf	3
  2727  043A  0EFE               	swapf	btemp,f
  2728  043B  0E7E               	swapf	btemp,w
  2729  043C  0009               	retfie
  2730  043D                     __end_of_ISR:
  2731                           
  2732                           	psect	intentry
  2733  0004                     __pintentry:	
  2734                           ;incstack = 0
  2735                           ; Regs used in _ISR: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2736                           
  2737  0004                     interrupt_function:
  2738  007E                     saved_w	set	btemp
  2739  0004  00FE               	movwf	btemp
  2740  0005  0E03               	swapf	3,w
  2741  0006  00F5               	movwf	??_ISR
  2742  0007  0804               	movf	4,w
  2743  0008  00F6               	movwf	??_ISR+1
  2744  0009  080A               	movf	10,w
  2745  000A  00F7               	movwf	??_ISR+2
  2746  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2747  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2748  000D  087F               	movf	btemp+1,w
  2749  000E  00F8               	movwf	??_ISR+3
  2750  000F  120A  118A  2C16   	ljmp	_ISR
  2751                           
  2752                           	psect	text13
  2753  03F1                     __ptext13:	
  2754 ;; *************** function _UART_Write_Text *****************
  2755 ;; Defined at:
  2756 ;;		line 32 in file "./Uart.h"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;  text            1    wreg     PTR unsigned char 
  2759 ;;		 -> STR_1(4), 
  2760 ;; Auto vars:     Size  Location     Type
  2761 ;;  text            1    3[COMMON] PTR unsigned char 
  2762 ;;		 -> STR_1(4), 
  2763 ;;  i               2    1[COMMON] int 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;                  1    wreg      void 
  2766 ;; Registers used:
  2767 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         3       0       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         3       0       0       0       0
  2777 ;;Total ram usage:        3 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    1
  2780 ;; This function calls:
  2781 ;;		_UART_Write
  2782 ;; This function is called by:
  2783 ;;		_ISR
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _UART_Write_Text
  2789  03F1                     _UART_Write_Text:
  2790                           
  2791                           ;incstack = 0
  2792                           ; Regs used in _UART_Write_Text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2793                           ;UART_Write_Text@text stored from wreg
  2794  03F1  00F4               	movwf	UART_Write_Text@text
  2795  03F2                     i1l1427:
  2796                           
  2797                           ;./Uart.h: 32: void UART_Write_Text(char *text);./Uart.h: 33: {;./Uart.h: 34:   int i;;.
      +                          /Uart.h: 35:   for(i=0;text[i]!='\0';i++)
  2798  03F2  01F2               	clrf	UART_Write_Text@i
  2799  03F3  01F3               	clrf	UART_Write_Text@i+1
  2800  03F4  2C08               	goto	i1l1433
  2801  03F5                     i1l1429:
  2802                           
  2803                           ;./Uart.h: 36:     UART_Write(text[i]);
  2804  03F5  0872               	movf	UART_Write_Text@i,w
  2805  03F6  0774               	addwf	UART_Write_Text@text,w
  2806  03F7  0084               	movwf	4
  2807  03F8  120A  118A  201F  120A  118A  	fcall	stringdir
  2808  03FD  120A  118A  2396  120A  118A  	fcall	_UART_Write
  2809  0402                     i1l1431:
  2810  0402  3001               	movlw	1
  2811  0403  07F2               	addwf	UART_Write_Text@i,f
  2812  0404  1803               	skipnc
  2813  0405  0AF3               	incf	UART_Write_Text@i+1,f
  2814  0406  3000               	movlw	0
  2815  0407  07F3               	addwf	UART_Write_Text@i+1,f
  2816  0408                     i1l1433:
  2817  0408  0872               	movf	UART_Write_Text@i,w
  2818  0409  0774               	addwf	UART_Write_Text@text,w
  2819  040A  0084               	movwf	4
  2820  040B  120A  118A  201F  120A  118A  	fcall	stringdir
  2821  0410  3A00               	xorlw	0
  2822  0411  1D03               	skipz
  2823  0412  2C14               	goto	u94_21
  2824  0413  2C15               	goto	u94_20
  2825  0414                     u94_21:
  2826  0414  2BF5               	goto	i1l1429
  2827  0415                     u94_20:
  2828  0415                     i1l66:
  2829  0415  0008               	return
  2830  0416                     __end_of_UART_Write_Text:
  2831                           
  2832                           	psect	text14
  2833  0396                     __ptext14:	
  2834 ;; *************** function _UART_Write *****************
  2835 ;; Defined at:
  2836 ;;		line 23 in file "./Uart.h"
  2837 ;; Parameters:    Size  Location     Type
  2838 ;;  data            1    wreg     unsigned char 
  2839 ;; Auto vars:     Size  Location     Type
  2840 ;;  data            1    0[COMMON] unsigned char 
  2841 ;; Return value:  Size  Location     Type
  2842 ;;                  1    wreg      void 
  2843 ;; Registers used:
  2844 ;;		wreg
  2845 ;; Tracked objects:
  2846 ;;		On entry : 0/0
  2847 ;;		On exit  : 0/0
  2848 ;;		Unchanged: 0/0
  2849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2850 ;;      Params:         0       0       0       0       0
  2851 ;;      Locals:         1       0       0       0       0
  2852 ;;      Temps:          0       0       0       0       0
  2853 ;;      Totals:         1       0       0       0       0
  2854 ;;Total ram usage:        1 bytes
  2855 ;; Hardware stack levels used:    1
  2856 ;; This function calls:
  2857 ;;		Nothing
  2858 ;; This function is called by:
  2859 ;;		_UART_Write_Text
  2860 ;; This function uses a non-reentrant model
  2861 ;;
  2862                           
  2863                           
  2864                           ;psect for function _UART_Write
  2865  0396                     _UART_Write:
  2866                           
  2867                           ;incstack = 0
  2868                           ; Regs used in _UART_Write: [wreg]
  2869                           ;UART_Write@data stored from wreg
  2870  0396  00F1               	movwf	UART_Write@data
  2871  0397                     i1l901:
  2872  0397                     i1l54:	
  2873                           ;./Uart.h: 23: void UART_Write(char data);./Uart.h: 24: {;./Uart.h: 25:   while(!TRMT);
  2874                           
  2875  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2876  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2877  0399  1C98               	btfss	24,1	;volatile
  2878  039A  2B9C               	goto	u5_21
  2879  039B  2B9D               	goto	u5_20
  2880  039C                     u5_21:
  2881  039C  2B97               	goto	i1l54
  2882  039D                     u5_20:
  2883  039D                     i1l903:
  2884                           
  2885                           ;./Uart.h: 26:   TXREG = data;
  2886  039D  0871               	movf	UART_Write@data,w
  2887  039E  1283               	bcf	3,5	;RP0=0, select bank0
  2888  039F  1303               	bcf	3,6	;RP1=0, select bank0
  2889  03A0  0099               	movwf	25	;volatile
  2890  03A1                     i1l57:
  2891  03A1  0008               	return
  2892  03A2                     __end_of_UART_Write:
  2893  007E                     btemp	set	126	;btemp
  2894  007E                     wtemp0	set	126
  2895                           
  2896                           	psect	config
  2897                           
  2898                           ;Config register CONFIG @ 0x2007
  2899                           ;	Oscillator Selection bits
  2900                           ;	FOSC = HS, HS oscillator
  2901                           ;	Watchdog Timer Enable bit
  2902                           ;	WDTE = OFF, WDT disabled
  2903                           ;	Power-up Timer Enable bit
  2904                           ;	PWRTE = OFF, PWRT disabled
  2905                           ;	Brown-out Reset Enable bit
  2906                           ;	BOREN = ON, BOR enabled
  2907                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  2908                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  2909                           ;	Data EEPROM Memory Code Protection bit
  2910                           ;	CPD = OFF, Data EEPROM code protection off
  2911                           ;	Flash Program Memory Write Enable bits
  2912                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  2913                           ;	In-Circuit Debugger Mode bit
  2914                           ;	DEBUG = 0x1, unprogrammed default
  2915                           ;	Flash Program Memory Code Protection bit
  2916                           ;	CP = OFF, Code protection off
  2917  2007                     	org	8199
  2918  2007  3F7A               	dw	16250

Data Sizes:
    Strings     9
    Constant    0
    Data        0
    BSS         26
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           13      8      12
    BANK0            80     47      69
    BANK1            80      0       0
    BANK3            85      0       0
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_9(CODE[3]), STR_8(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), 
		 -> STR_3(CODE[3]), STR_2(CODE[3]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> sprintf@pb(COMMON[2]), 

    S838__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> Absolute function(), 

    S838__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0

    pb.ptr	PTR unsigned char  size(1) Largest target is 0

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 512
		 -> STR_7(CODE[2]), STR_4(CODE[2]), RAM(DATA[512]), 

    UART_Write_Text@text	PTR unsigned char  size(1) Largest target is 4
		 -> STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    _ISR->_UART_Write_Text
    _UART_Write_Text->_UART_Write

Critical Paths under _main in BANK0

    _main->_UART_Init
    _UART_Init->___aldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                14    14      0    3139
                                             33 BANK0     14    14      0
                     _ADC_Initialize
                           _ADC_Read
                           _Lcd_Init
                   _Lcd_Write_String
                          _TMR0_Unit
                          _UART_Init
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     396
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) _UART_Init                                           18    14      4    1292
                                             15 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8    1060
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _TMR0_Unit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     4     2      2     952
                                              5 BANK0      4     2      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     178
                                              1 BANK0      4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     198
                                              4 BANK0      2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     110
                                              1 BANK0      3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      88
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ADC_Read                                             5     3      2      22
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _ISR                                                  4     4      0     138
                                              4 COMMON     4     4      0
                    _UART_Write_Text
 ---------------------------------------------------------------------------------
 (5) _UART_Write_Text                                      3     3      0     138
                                              1 COMMON     3     3      0
                         _UART_Write
 ---------------------------------------------------------------------------------
 (6) _UART_Write                                           1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Initialize
   _ADC_Read
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _TMR0_Unit
   _UART_Init
     ___aldiv
   ___wmul

 _ISR (ROOT)
   _UART_Write_Text
     _UART_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            D      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               D      8       C       1       92.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      51       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     2F      45       5       86.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            55      0       0       8        0.0%
BANK3               55      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      51      12        0.0%


Microchip Technology PIC Macro Assembler V2.30 build 20200825195618 
Symbol Table                                                                                   Mon Jun 20 19:49:11 2022

                        _s 004F                          _x 007B                          pc 0002  
                       l51 06DD                         fsr 0004        ___wmul@multiplicand 0022  
                      l203 03B3                        l150 03E2                        l151 03E8  
                      l152 03E9                        l153 03EF                        l170 0563  
                      l155 03F0                        l147 03DA                        l148 03DB  
                      l149 03E1                        l173 0500                        l158 03CF  
                      l272 0485                        l275 0491                        l179 04C3  
                      l443 0578                        l380 0463                        l269 0395  
                      l453 0600                        l378 044B                        _RD0 0040  
                      _RD1 0041                        _RD2 0042                        _RD4 0044  
                      _RD5 0045                        _RD6 0046                        _RD7 0047  
                      _PR2 0092                        _ISR 0416                        u710 03D8  
                      u711 03D7                        u720 03DF                        u800 05AF  
                      u721 03DE                        u801 05AE                        u730 03E6  
                      u731 03E5                        u740 03ED                        u820 05CA  
                      u900 0673                        u741 03EC                        u821 05C9  
                      u910 068C                        u815 05B1                        u840 05E8  
                      u760 056B                        u841 05E7                        u825 05C6  
                      u761 056A                        u921 069E                        u905 066E  
                      u850 05ED                        u770 057C                        u930 06CB  
                      u922 069F                        u755 04D5                        u851 05EC  
                      u835 05DA                        u771 057B                        u931 06CA  
                      u923 06A4                        u915 0687                        u780 059B  
                      u924 06A5                        u860 0611                        u781 059A  
                      u925 06AA                        u926 06AB                        u870 062A  
                      u960 0489                        u961 0488                        u881 063C  
                      u865 060C                        u970 04C3                        u890 0665  
                      u882 063D                        u955 046E                        u971 04C2  
                      u795 05A0                        u891 0664                        u883 0642  
                      u875 0625                        u884 0643                        u885 0648  
                      u886 0649                        fsr0 0004                        indf 0000  
                     ?_ISR 0071                       l1321 03D3                       l1401 0601  
                     l1323 03D8                       l1331 03B7                       l1411 06CB  
                     l1403 065C                       l1325 03DF                       l1333 03B8  
                     l1341 04C7                       l1421 06D7                       l1413 06CF  
                     l1405 0665                       l1327 03E6                       l1335 03BE  
                     l1351 04EA                       l1343 04D1                       l1423 06DA  
                     l1415 06D0                       l1407 06BE                       l1511 0452  
                     l1329 03ED                       l1337 03C1                       l1353 04ED  
                     l1345 04D2                       l1441 03AE                       l1361 0564  
                     l1417 06D3                       l1409 06C1                       l1513 0459  
                     l1505 043D                       l1521 06E1                       l1451 038D  
                     l1339 03CC                       l1355 04F3                       l1347 04E0  
                     l1443 03AF                       l1435 03A2                       l1371 058B  
                     l1363 0567                       l1419 06D6                       l1515 045F  
                     l1507 0441                       l1531 070C                       l1523 06F0  
                     l1461 0528                       l1453 0501                       l1357 04F6  
                     l1349 04E3                       l1445 03B0                       l1437 03A7  
                     l1381 05AF                       l1373 0593                       l1365 056B  
                     l1509 0445                       l1541 0747                       l1533 0718  
                     l1525 06FB                       l1463 0467                       l1455 0507  
                     l1359 04FD                       l1447 03B1                       l1439 03AB  
                     l1391 05E2                       l1383 05B8                       l1375 059B  
                     l1367 057C                       l1551 0777                       l1543 074E  
                     l1535 0724                       l1527 06FE                       l1519 06DE  
                     l1465 0478                       l1457 0511                       l1473 0492  
                     l1449 03B2                       l1385 05CA                       l1377 059E  
                     l1393 05E8                       l1369 0587                       l1561 07A9  
                     l1553 077E                       l1545 0754                       l1537 0731  
                     l1529 0703                       l1467 0482                       l1459 0522  
                     l1475 0497                       l1395 05ED                       l1387 05D8  
                     l1379 05AB                       l1571 07C8                       l1563 07B0  
                     l1555 0784                       l1547 0761                       l1539 0738  
                     l1469 0489                       l1477 04A9                       l1397 05F8  
                     l1389 05D9                       l1573 07CD                       l1565 07B5  
                     l1557 079B                       l1549 0768                       l1479 04B1  
                     l1567 07BC                       l1575 07D1                       l1559 07A2  
                     l1577 07DD                       l1569 07C1                       STR_1 0025  
                     STR_2 0029                       STR_4 002C                       _BRGH 04C2  
                     _CREN 00C4                       u1100 0777                       u1101 0776  
                     u1030 0445                       u1110 07A2                       u1031 0444  
                     u1111 07A1                       u1120 07A9                       u1121 07A8  
                     u1105 0773                       u1130 07B0                       u1131 07AF  
                     u1060 045F                       u1140 07BC                       u1061 045E  
                     u1045 044C                       u1141 07BB                       u1150 07C8  
                     u1070 0731                       u1055 0453                       u1151 07C7  
                     u1071 0730                       u1080 0747                       u1081 0746  
                     u1090 0761                       u1091 0760                       u1075 072D  
                     u1085 0743                       u1407 04FA                       u1095 075D  
                     u1417 050D                       u1427 051D                       u1437 052E  
                     u1447 03C7                       u1457 047E                       u1387 07E5  
                     u1397 04E7                       _RCIF 0065                       i1l54 0397  
                     i1l57 03A1                       i1l66 0415                       _TMR0 0001  
                     _SPEN 00C7                       _TRMT 04C1                       _TXEN 04C5  
                     _SYNC 04C4                       u5_20 039D                       u5_21 039C  
        ?_Lcd_Write_String 0025                       _main 06DE                       _freq 0061  
                     _duty 0059                       _hour 005B                       btemp 007E  
         __end_of_ADC_Read 0492                       start 0012         ??_Lcd_Write_String 0027  
          __end_of_Lcd_Cmd 03D0    __end_of_UART_Write_Text 0416                      ??_ISR 0075  
          __end_of___aldiv 0601                      ?_main 0071                      _CCP1X 00BD  
                    _CCP1Y 00BC                      _CCP2X 00ED                      _CCP2Y 00EC  
                    i1l126 0430                      i1l901 0397                      i1l903 039D  
                    _RCREG 001A                      _SPBRG 0099                      _PORTC 0007  
                    _TRISC 0087                      _TRISD 0088                      u94_20 0415  
                    u94_21 0414                      _TXREG 0019                ?_UART_Write 0071  
       __size_of_UART_Init 00DD         __size_of_TMR0_Unit 0012                      _count 0079  
                    main@x 0044                      main@y 0046                      pclath 000A  
                    status 0003                      wtemp0 007E           __end_of_Lcd_Init 0564  
         __end_of_Lcd_Port 03F1            __initialization 07EF               __end_of_main 07EF  
                   ??_main 0041                     _ADCON0 001F                     _ADCON1 009F  
                   _ADRESH 001E                     _ADRESL 009E                     _CCPR1L 0015  
                   _CCPR2L 001B                     i1l1431 0402                     i1l1433 0408  
                   i1l1427 03F2                     i1l1429 03F5                     i1l1581 041A  
                   i1l1583 041B                     i1l1585 0421                     i1l1587 0428  
                   i1l1579 0416                     i1l1589 042E                     u116_20 041A  
                   u116_21 0419                     u117_20 0428                     u117_21 0427  
                ??_Lcd_Cmd 0021    __size_of_Lcd_Write_Char 003D                     _TRISB1 0431  
                   _TRISC6 043E                     _TRISC7 043F          __end_of_UART_Init 06DE  
      __size_of_UART_Write 000C                  ??___aldiv 0028          __end_of_TMR0_Unit 03B4  
                   ___wmul 043D           ?_UART_Write_Text 0071            ADC_Read@channel 0024  
                   _minute 005F                     _second 005D                  ?_ADC_Read 0020  
                   saved_w 007E    __end_of__initialization 07FC             __pcstackCOMMON 0071  
           _OPTION_REGbits 0081                 ??_ADC_Read 0022                  ?_Lcd_Init 0071  
                ?_Lcd_Port 0071                 __pbssBANK0 004F                 __pmaintext 06DE  
                  ?___wmul 0020                 __pintentry 0004  __size_of_Lcd_Write_String 0032  
  __size_of_ADC_Initialize 0009               ??_UART_Write 0071                 ??_Lcd_Init 0024  
               ??_Lcd_Port 0020                 __stringtab 0015             _Lcd_Write_Char 04C4  
                  _Lcd_Cmd 03B4                    ___aldiv 0564            __size_of___wmul 0027  
       __end_of_UART_Write 03A2                    __ptext1 043D                    __ptext2 0601  
                  __ptext3 0564                    __ptext4 03A2                    __ptext5 0492  
                  __ptext6 04C4                    __ptext7 0501                    __ptext8 03B4  
                  __ptext9 03D0               __size_of_ISR 0027                  _T2CONbits 0012  
         ___aldiv@dividend 0024                    main@dem 004D                    clrloop0 0386  
   __end_of_Lcd_Write_Char 0501       end_of_initialization 07FC           ___aldiv@quotient 002B  
                Lcd_Port@a 0020                  _UART_Init 0601                  _TMR0_Unit 03A2  
           UART_Write@data 0071                  _TRISCbits 0087          __size_of_ADC_Read 002E  
          ?_Lcd_Write_Char 0071          Lcd_Write_String@a 0025          Lcd_Write_String@i 0027  
              _CCP1CONbits 0017                _CCP2CONbits 001D             __end_of___wmul 0464  
         _Lcd_Write_String 0492                 ?_UART_Init 002F             _ADC_Initialize 038D  
               ?_TMR0_Unit 0071   __size_of_UART_Write_Text 0025        start_initialization 07EF  
              __end_of_ISR 043D          __size_of_Lcd_Init 0063          __size_of_Lcd_Port 0021  
                 ??___wmul 0024     __end_of_ADC_Initialize 0396            Lcd_Write_Char@a 0024  
          Lcd_Write_Char@y 0023                __pbssCOMMON 0079                  ___latbits 0002  
            __pcstackBANK0 0020                   ?_Lcd_Cmd 0071                   ?___aldiv 0020  
          ?_ADC_Initialize 0071                ??_UART_Init 0033                  __pstrings 0015  
              ??_TMR0_Unit 0020                   _ADC_Read 0464                 UART_Init@x 003F  
        ??_UART_Write_Text 0072            ___aldiv@divisor 0020          interrupt_function 0004  
          ___aldiv@counter 0029             ___wmul@product 0024                  clear_ram0 0385  
                 Lcd_Cmd@a 0023                   _GO_nDONE 00FA          UART_Init@baudrate 002F  
              __stringbase 0024          ___wmul@multiplier 0020           ??_Lcd_Write_Char 0021  
                main@joy_X 0048                  main@joy_Y 004A                  main@vitri 004C  
                 _Lcd_Init 0501                   _Lcd_Port 03D0   __end_of_Lcd_Write_String 04C4  
         __size_of_Lcd_Cmd 001C           __size_of___aldiv 009D         __end_of__stringtab 0025  
                 __ptext10 0464                   __ptext11 038D                   __ptext12 0416  
                 __ptext13 03F1                   __ptext14 0396        UART_Write_Text@text 0074  
            __size_of_main 0111                 _INTCONbits 000B         Lcd_Write_Char@temp 0022  
                 intlevel1 0000           ??_ADC_Initialize 0020                  stringcode 001F  
          _UART_Write_Text 03F1                   stringdir 001F                   stringtab 0015  
             ___aldiv@sign 002A                 _UART_Write 0396           UART_Write_Text@i 0072  
